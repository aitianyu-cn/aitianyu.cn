{
    "HOME_PAGE_ITEM": "主页",
    "DOWNLOAD_PAGE_ITEM": "下载",
    "DOCUMENT_PAGE_ITEM": "文档",
    "LANGUAGE_PAGE_ALT": "选择语言",

    "CONTACT_US": "联系我们",
    "EMAIL_TEXT": "邮件",
    "PHONE_TEXT": "电话",
    "LOOKING_FORWARD_CONTACT": "很期待与您的交流",
    "COPYRIGHT_TEXT": "版权所有",

    "DIALOG_PAGE_CLOSE_BUTTON": "关闭",

    "HOME_PAGE_TIANYU": "/assert/logo/aitianyu.logo.cn.gif",
    "HOME_PAGE_DESCRIPTION": "开源的原生开发库与周边工具",
    "HOME_PAGE_SOURCE_EMPTY": "当前没有找到项目哦~ 请过会儿再来吧~",
    "HOME_PAGE_MOB_ABOUT_TIANYU": "关于天宇",

    "ABOUT_TIANYU_FIRST_TITLE": "FIRST",
    "ABOUT_TIANYU_FIRST_P_ONE": "P1",
    "ABOUT_TIANYU_FIRST_P_TWO": "P2",

    "ABOUT_TIANYU_SECOND_TITLE": "SECOND",
    "ABOUT_TIANYU_SECOND_P_ONE": "P1",
    "ABOUT_TIANYU_SECOND_P_TWO": "P2",

    "ABOUT_TIANYU_THIRD_TITLE": "THIRD",
    "ABOUT_TIANYU_THIRD_P_ONE": "P1",
    "ABOUT_TIANYU_THIRD_P_TWO": "P2",

    "404_OPS_MSG": "咦",
    "404_DES_MSG": "好像出问题咯",
    "404_OP1_MSG": "当前请求的数据不存在或无权访问",
    "404_OP2_MSG": "您可以切换到其他页面继续浏览 ^_v_^",

    "AITIANYU_DEV_LANGUAGE_TITLE": "更改语言",

    "REQUEST_WAITING_PAGE_POINT": "等待中...",
    "REQUEST_WAITING_PAGE_AI": "...",
    "REQUEST_WAITING_PAGE_TEXT": "载入中...",
    "REQUEST_WAITING_IS_TIMEOUT": "数据加载超时，是否继续等待？",
    "REQUEST_WAITING_TIMEOUT_DIALOG_CONTINUE_WAIT": "等待",
    "REQUEST_WAITING_TIMEOUT_DIALOG_CANCEL_WAIT": "取消",

    "REQUEST_ERROR_PAGE_IMG_ALT": "重试",
    "REQUEST_ERROR_PAGE_TEXT": "数据加载失败，刷新以重试",

    "LANGUAGE_TITLE": "多语言",
    "LANGUAGE_SUPPORT_TITLE": "天宇当前支持的语言",
    "LANGUAGE_PENDING_TITLE": "进行中",
    "zh_CN": "简体中文",
    "zh_NC": "繁體中文",
    "en_US": "English (US)",

    "LANGUAGE_PENDING_MOUSE_HOLDER": "当前选择的语言正在适配中",

    "PROJECT_DOWNLOAD_TITLE": "获取项目资源",

    "PROJECT_NAME_TIANYU_NATIVE": "天宇C++原生 开发库",
    "PROJECT_NAME_TIANYU_NATIVE_DESC": "原生的c++ (Standard 17)开发库，不包含任何第三方外部依赖库。",

    "PROJECT_NAME_TIANYU_TEST_FRAMEWORK": "天宇C++测试框架",
    "PROJECT_NAME_TIANYU_TEST_FRAMEWORK_DESC": "基于“天宇C++原生开发库”开发的小型单元测试框架，不依赖除C++17基本头文件之外的其他第三方库。",

    "PROJECT_TITLE_GITHUB_REPO": "储存库",
    "PROJECT_TITLE_GITHUB_CLONE": "克隆",
    "SOURCE": "源代码",
    "WINDOWS": "Windows",
    "LINUX": "Linux",
    "MACOS": "MacOS",

    "DOWNLOAD_INVALID": "当前项目没有提供下载资源，请访问资源库获取更多资源",
    "NO_DOWNLOAD_PROJECT": "当前没有可用于下载的资源",
    "DOWNLOAD_DIALOG_EMPTY_SEARCH": "请输入数据用于搜索！",
    "DOWNLOAD_DIALOG_NOT_SUPPORT_SEARCH": "搜索功能当前还未支持！",

    "TIANYU_DEV_DOCS_PROJECT_OPTIONS": "文档选项",
    "TIANYU_DEV_DOCS_PROJECT_NO_OPTIONS": "当前项目没有文档",
    "APIDocs": "API文档",
    "Architecture": "项目架构",
    "HelperDocs": "帮助",
    "Macrodef": "宏定义文档",

    "PROJECT_DOCS_TITLE": "项目文档",
    "PROJECT_DOCS_API_TITLE": "API 文档",
    "PROJECT_DOCS_ARCH_TITLE": "项目架构 文档",
    "PROJECT_DOCS_HELP_TITLE": "帮助 文档",
    "PROJECT_DOCS_MACRO_TITLE": "宏定义 文档",
    "PROJECT_DOCS_API_TIANYU_NATIVE_TITLE": "天宇C++原生开发库 - API",

    "TIANYU_DEV_DOCS_MACRO_DEFINE_NO_ITEM": "当前项目没有宏定义",
    "TIANYU_DEV_DOCS_MACRO_DEFINE_TITLE": "宏定义列表",
    "TIANYU_DEV_DOCS_MACRO_DEFINE_ITEM_VALUE_TITLE": " ",
    "TIANYU_DEV_DOCS_MACRO_DEFINE_ITEM_FILE_TITLE": " ",
    "TIANYU_DEV_DOCS_MACRO_DEFINE_ITEM_I18N_TITLE": " ",

    "TIANYU_DEV_DOCS_API": "API 浏览器",

    "TIANYU_DEV_DOCS_API_NOT_AVAILABLE": "当前没有可用的项目",
    "TIANYU_DEV_DOCS_API_DATA_LOADING": "数据加载中 请稍后...",
    "TIANYU_DEV_DOCS_API_DATA_LOAD_ERROR": "数据加载失败 请刷新后重试",
    "TIANYU_DEV_DOCS_API_TITLE": "API 参考",

    "TIANYU_DEV_DOCS_API_TABLE_ITEM_TITLE_NAME": "名称",
    "TIANYU_DEV_DOCS_API_TABLE_ITEM_TITLE_DESC": "说明",

    "TIANYU_DEV_DOCS_API_SOURCE_EMPTY": "当前项目还未上传API文档，请耐心等候！",

    "TIANYU_DEV_DOCS_API_PROJECT_TITLE": "项目 - ",
    "TIANYU_DEV_DOCS_API_NAMESPACE_TITLE": "命名空间 - ",
    "TIANYU_DEV_DOCS_API_DATATYPE_TITLE": "类型 - ",

    "TIANYU_DEV_DOCS_API_PROJECT_NAMESPACE_EMPTY": "当前项目没有找到有效的命名空间",
    "TIANYU_DEV_DOCS_API_PROJECT_DATATYPES_EMPTY": "当前命名空间中没有找到定义的类型",
    "TIANYU_DEV_DOCS_API_PROJECT_DATATYPE_EMPTY": "当前类型没有自定义结构，请查询其父类或接口",

    "TIANYU_DEV_DOCS_API_NAMESPACE_TYPE_CLASS": "类",
    "TIANYU_DEV_DOCS_API_NAMESPACE_TYPE_ENUM": "枚举",
    "TIANYU_DEV_DOCS_API_NAMESPACE_TYPE_FUNCTION": "函数",
    "TIANYU_DEV_DOCS_API_NAMESPACE_TYPE_DELEGATE": "函数指针/函数委托",
    "TIANYU_DEV_DOCS_API_NAMESPACE_TYPE_INTERFACE": "接口",
    "TIANYU_DEV_DOCS_API_NAMESPACE_TYPE_STRUCT": "结构体",
    "TIANYU_DEV_DOCS_API_NAMESPACE_TYPE_PROPERTY": "公共变量/常量",
    "TIANYU_DEV_DOCS_API_MACRO_DEF": "宏定义",

    "TIANYU_DEV_DOCS_API_DATATYPE_TYPE_CONSTRUCTOR": "构造函数",
    "TIANYU_DEV_DOCS_API_DATATYPE_TYPE_OPERATOR": "运算符重载",
    "TIANYU_DEV_DOCS_API_DATATYPE_TYPE_METHOD": "方法",
    "TIANYU_DEV_DOCS_API_DATATYPE_TYPE_PROPERTY": "属性",
    "TIANYU_DEV_DOCS_API_DATATYPE_TYPE_ENUM_VALUE": "枚举值",

    "TIANYU_DEV_DOCS_API_DATATYPE_MEMBER_DISPLAY_NOTEKEY_NAME": "标识",
    "TIANYU_DEV_DOCS_API_DATATYPE_MEMBER_DISPLAY_NOTEKEY_FILE": "文件",
    "TIANYU_DEV_DOCS_API_DATATYPE_MEMBER_DISPLAY_NOTEKEY_DEF": "定义",
    "TIANYU_DEV_DOCS_API_DATATYPE_MEMBER_DISPLAY_NOTEKEY_NOTE": "注释",

    "TIANYU_DEV_DOCS_API_MACRO_DEF_VALUE_NOTEKEY": "等价值",

    "tianyu-native": "天宇C++原生 开发库",
    "DTY_PROJECTS_CPP_API_API_NAMESPACE_GLOBAL": "命名空间（全局） 提供最基本的核心类型、方法定义。",
    "DTY_PROJECTS_CPP_API_API_NAMESPACE_DTY": "命名空间（基础命名空间 - ::dty） 包含天宇库的基本类、接口与枚举类型。",
    "DTY_PROJECTS_CPP_API_API_NAMESPACE_DTY_COLLECTION": "命名空间（数据结构集 - ::dty::collection） 包含定义各种对象集合（如列表、队列、位数组、哈希表和字典）的接口和类。",
    "DTY_PROJECTS_CPP_API_API_NAMESPACE_DTY_EXCEPT": "命名空间（异常类型集 - ::dty::exception） 包含天宇库的基本异常类型定义。",
    "DTY_PROJECTS_CPP_API_API_NAMESPACE_DTY_I18N": "命名空间（多语言组件集 - ::dty::i18n） 包含用于多语言操作的基本接口、类型和方法。",
    "DTY_PROJECTS_CPP_API_API_NAMESPACE_DTY_TEST": "命名空间（测试核心 - ::dty::test） 包含天宇测试模块的核心类型、方法定义，并为天宇库提供单元测试支持。",

    "global": "全局",
    "dty": "dty",
    "dty_collection": "dty.collection",
    "dty_except": "dty.except",
    "dty_i18n": "dty.i18n",
    "dty_test": "dty.test",

    "class": "类",
    "interface": "接口",
    "function": "方法/委托",
    "enum": "枚举",

    "TIANYU_DEV_DOCS_API_MEMBER_DEFINE_TITLE": "定义",
    "TIANYU_DEV_DOCS_API_MEMBER_DEFINE_EXAMPLE": "示例",
    "TIANYU_DEV_DOCS_API_MEMBER_DEFINE_ITEM_FILE": "文件：",

    "TIANYU_DEV_DOCS_API_MEMBER_DEFINE_CONSTRUCTOR": "构造函数",
    "TIANYU_DEV_DOCS_API_MEMBER_DEFINE_PROPERTY": "属性",
    "TIANYU_DEV_DOCS_API_MEMBER_DEFINE_OPERATOR": "运算符重载",
    "TIANYU_DEV_DOCS_API_MEMBER_DEFINE_METHOD": "方法",

    "TIANYU_DEV_DOCS_API_MEMBERS_EMPTY": "当前类型没有找到构造函数、属性、运算符重载或者非私有方法。该类型如果为模板类型的具例化实现，请参考该类型对应的模板原型。",

    "abstract": "抽象类定义前缀",
    "TEST_MAIN": "测试框架入口 main 函数",
    "_enum": "枚举类型定义",
    "_interface": "接口类型",
    "_internal_export": "内部导出接口",
    "__ARRAY__": "标识当前值类型保存为数组",
    "__BOOLEAN_TYPE_BINARY_LENGTH__": "布尔值类型二进制位数",
    "__BYTE_TYPE_BINARY_LENGTH__": "字节类型二进制位数",
    "__CHAR_TYPE_BINARY_LENGTH__": "字符类型二进制位数",
    "__CMODE__": "标识所修饰的元素以 C 语言的方式进行编译",
    "__construction__": "标识类的构造函数（包含模拟 OO）",
    "__CONSTRUCTOR__": "标识类的构造函数（包含模拟 OO）",
    "__COPYSTRUCTOR__": "标识类的复制构造函数（包含模拟 OO）",
    "__cp_construct__": "标识类的复制构造函数（包含模拟 OO）",
    "__DEFAULT__": "标识可重载函数和拓展类型、数据的默认实现",
    "__destruction__": "标识类的析构函数（包含模拟 OO）",
    "__DESTRUCTOR__": "标识类的析构函数（包含模拟 OO）",
    "__DOUBLE_TYPE_BINARY_LENGTH__": "双精度实数类型二进制位数",
    "__DPOINTER__": "标识以二级指针类型保存、传递的属性、变量和参数",
    "__DTEST_CORE__": "表示启用测试框架",
    "__DTY_AIP": "指示当前系统为 Apple IOS",
    "__DTY_AIS": "指示当前系统为 Apple 平台 Iphone 模拟器",
    "__DTY_AMC": "指示当前系统为 Apple MacOS",
    "__DTY_APF": "指示当前系统为 Apple MacOS",
    "__DTY_CORE_MSG_CONVERT": "绑定多语言头文件，用于提供 key->i18n text 的转换",
    "__DTY_DEEP_LEARNING_MODE__": "指示当前项目内的部分组件使用学习模式",
    "__DTY_DEV_MODE__": "指示当前项目是否进入开发模式",
    "__DTY_ERR_64": "开发环境错误 - 指示天宇库需要 64bit 环境",
    "__DTY_LNX": "指示当前系统为 Linux 系列",
    "__DTY_SMART_POINTER_COPY_WEAK_MODE__": "指示当前项目内的智能指针使用浅拷贝模式进行复制构造",
    "__DTY_UNSAFE_MODE__": "指示当前项目内的部分组件使用不安全的内存模式",
    "__DTY_WIN": "指示当前系统为 微软 Windows",
    "__FLOAT_TYPE_BINARY_LENGTH__": "实数类型二进制位数",
    "__INOUT__": "标识方法与函数的参数类型既可以进行输入也可作为返回",
    "__INPUT__": "标识方法与函数的参数类型为输入",
    "__INSTE__": "标识方法的传入参数为当前操作的实例（用于 C 语言的模拟 OO）",
    "__INT_TYPE_BINARY_LENGTH__": "整数类型二进制位数",
    "__LONG_TYPE_BINARY_LENGTH__": "长整数类型二进制位数",
    "__OTPUT__": "标识方法与函数的参数类型为输出",
    "__override_cfun": "常函数重载",
    "__override_func": "函数重载",
    "__POINTER__": "标识以指针类型保存、传递的属性、变量和参数",
    "__PREDEFINE__": "标识未定义实体的方法、结构体、类等元素",
    "__PREREALIZ__": "标识__PREDEFINE__定义的方法、结构体、类等元素的实现",
    "__PRI__": "指示修饰的函数与属性外部不可访问",
    "__PRO__": "指示修饰的函数与属性子类可访问",
    "__PTRREFER__": "标识以指针引用类型保存、传递的属性、变量和参数",
    "__PTR_TO_REF__": "标识指针类型到引用类型的转换",
    "__PTR_TO_VAR__": "标识指针类型到值类型的转换",
    "__PUB__": "指示修饰的函数与属性外部可访问",
    "__pure_const_fn": "纯虚常函数后缀",
    "__pure_virtual_fun": "纯虚函数后缀",
    "__REFERENCE__": "标识以引用类型保存、传递的属性、变量和参数",
    "__REF_TO_PTR__": "标识引用类型到指针类型的转换",
    "__REF_TO_VAR__": "标识引用类型到值类型的转换",
    "__SHORT_TYPE_BINARY_LENGTH__": "短整数类型二进制位数",
    "__SIGNED_CHAR_MAX__": "字符类型有符号数最大值",
    "__SIGNED_CHAR_MIN__": "字符类型有符号数最小值",
    "__SIGNED_INT16_MAX__": "16 位整数类型有符号数最大值",
    "__SIGNED_INT16_MIN__": "16 位整数类型有符号数最小值",
    "__SIGNED_INT32_MAX__": "32 位整数类型有符号数最大值",
    "__SIGNED_INT32_MIN__": "32 位整数类型有符号数最小值",
    "__SIGNED_INT64_MAX__": "64 位整数类型有符号数最大值",
    "__SIGNED_INT64_MIN__": "64 位整数类型有符号数最小值",
    "__SIGNED_INT8_MAX__": "8 位整数类型有符号数最大值",
    "__SIGNED_INT8_MIN__": "8 位整数类型有符号数最小值",
    "__UNSIGNED_CHAR_MAX__": "字符类型无符号数最大值",
    "__UNSIGNED_CHAR_MIN__": "字符类型无符号数最小值",
    "__UNSIGNED_INT16_MAX__": "16 位整数类型无符号数最大值",
    "__UNSIGNED_INT16_MIN__": "16 位整数类型无符号数最小值",
    "__UNSIGNED_INT32_MAX__": "32 位整数类型无符号数最大值",
    "__UNSIGNED_INT32_MIN__": "32 位整数类型无符号数最小值",
    "__UNSIGNED_INT64_MAX__": "64 位整数类型无符号数最大值",
    "__UNSIGNED_INT64_MIN__": "64 位整数类型无符号数最小值",
    "__UNSIGNED_INT8_MAX__": "8 位整数类型无符号数最大值",
    "__UNSIGNED_INT8_MIN__": "8 位整数类型无符号数最小值",
    "__VARIABLE__": "标识以值类型保存、传递的属性、变量和参数",
    "__VAR_TO_PTR__": "标识值类型到指针类型的转换",
    "__VAR_TO_REF__": "标识值类型到引用类型的转换",

    "GLOBAL_DTY_BOOLEAN": "表示一个布尔（true 或 false）值。",
    "GLOBAL_DTY_BOOL_PTR": "表示一个布尔指针（该指针为智能指针，提供内存安全保护）。",
    "GLOBAL_DTY_BYTE": "表示一个 8 位无符号整数。",
    "GLOBAL_DTY_BYTE_PTR": "表示一个 8 位无符号整数指针（该指针为智能指针，提供内存安全保护）。",
    "GLOBAL_DTY_CHAR": "表示一个有符号字符。",
    "GLOBAL_DTY_COLLECTION_COMPARERESULT": "表示两个对象比较后的大小。",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT": "表示Iterator的Filter方法计算之后的结果集。",
    "GLOBAL_DTY_COLLECTION_ICOLLECTIONS": "定义所有泛型集合的大小、枚举数。",
    "GLOBAL_DTY_COLLECTION_ICOMPAREABLE": "提供比较两个对象的方法。",
    "GLOBAL_DTY_COLLECTION_IEQUATABLE": "定义由值类型或类实现的通用方法，用于提供对象实例之间的相等性判断。",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY": "枚举器实例接口，用于为枚举器提供内存安全的枚举数据。",
    "GLOBAL_DTY_COLLECTION_ITERATOR": "枚举器对象，不可派生其他子类，由其他枚举器或枚举器实例初始化，提供数据集的遍历、筛选、查找方法。",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY": "枚举器实例，不可派生其他子类，用于提供通用的枚举器实例模板，可以提供枚举器的功能。（作为对象传递时可能引发内存安全问题，故尽可能由枚举器实例初始化枚举器对象进行传递）",
    "GLOBAL_DTY_DOUBLE": "表示一个双精度实数。",
    "GLOBAL_DTY_DOUBLE_PTR": "表示一个双精度实数指针（该指针为智能指针，提供内存安全保护）。",
    "GLOBAL_DTY_EVENTARGS": "表示包含事件数据的类的基类，并提供用于不包含事件数据的事件的值。",
    "GLOBAL_DTY_EVENTHANDLER": "表示将用于处理事件的公共方法，默认事件类型为不包含事件数据的EventArgs基类。",
    "GLOBAL_DTY_EVENTHANDLERITEM": "表示一个事件处理项，默认事件类型为不包含事件数据的EventArgs基类",
    "GLOBAL_DTY_EXCEPT_ARGUMENTEXCEPTION": "当向方法提供的参数之一无效时引发的异常。",
    "GLOBAL_DTY_EXCEPT_ARGUMENTNULLEXCEPTION": "当将 null 引用传递到不接受其作为有效参数的方法时引发的异常。",
    "GLOBAL_DTY_EXCEPT_ARGUMENTOUTOFRANGEEXCEPTION": "当自变量的值超出了所调用方法定义的允许值范围时引发的异常。",
    "GLOBAL_DTY_EXCEPT_ARITHMETICEXCEPTION": "当算术、强制转换或转换操作发生错误时引发的异常。",
    "GLOBAL_DTY_EXCEPT_EXCEPTION": "表示在应用程序执行期间出现的错误。（该类为所有异常类型的基类）",
    "GLOBAL_DTY_EXCEPT_INDEXOUTOFRANGEEXCEPTION": "试图访问索引超出界限的数组或集合的元素时引发的异常。",
    "GLOBAL_DTY_EXCEPT_NOTIMPLEMENTATIONEXCEPTION": "在无法实现请求的方法或操作时引发的异常。",
    "GLOBAL_DTY_EXCEPT_NULLPOINTEREXCEPTION": "尝试引用空对象指针时引发的异常。",
    "GLOBAL_DTY_EXCEPT_OPERATIONFAILEDEXCEPTION": "当请求的操作失败时引发的异常",
    "GLOBAL_DTY_EXCEPT_OPERATIONNOTSUPPORTEXCEPTION": "当请求的操作不支持时引发的异常",
    "GLOBAL_DTY_EXCEPT_PARSEEXCEPTION": "尝试转换不受支持的数据时引发的异常",
    "GLOBAL_DTY_EXCEPT_PARSESTRINGEMPTYEXCEPTION": "尝试转换空字符串时引发的异常",
    "GLOBAL_DTY_FLOAT": "表示一个实数类型。",
    "GLOBAL_DTY_FLOAT_PTR": "表示一个实数类型指针（该指针为智能指针，提供内存安全保护）。",
    "GLOBAL_DTY_FORMATHELPER": "数据格式化助手，提供基本数据类型、拥有IToString接口以及其他通用类型的数据数据格式化方法。",
    "GLOBAL_DTY_GETTYPE_1": "获取指定类型的类型声明与信息。",
    "GLOBAL_DTY_GETTYPE_2": "获取指定类型的类型声明与对象哈希值。",
    "GLOBAL_DTY_I18N_LANGUAGEAREA": "提供所有国家地区的编码。",
    "GLOBAL_DTY_IFORMATTER": "提供一种功能，用以将对象的值格式化为字符串表示形式。",
    "GLOBAL_DTY_INT16": "表示一个 16 位有符号整数。",
    "GLOBAL_DTY_INT32": "表示一个 32 位有符号整数。",
    "GLOBAL_DTY_INT64": "表示一个 64 位有符号整数。",
    "GLOBAL_DTY_INT_PTR": "表示一个 32 位有符号整数指针（该指针为智能指针，提供内存安全保护）。",
    "GLOBAL_DTY_IOBJECTCONVERTER": "为类型提供由字节数组转换为对象实例的方法。",
    "GLOBAL_DTY_IPROPERTY": "属性类型接口，提供属性的获取与设置方法。",
    "GLOBAL_DTY_IPROPERTYGETTER": "属性获取器，提供属性的获取方法。",
    "GLOBAL_DTY_IPROPERTYSETTER": "属性设置器，提供属性的设置方法。",
    "GLOBAL_DTY_ISTRINGCONVERTER": "为类型提供由字节数组到字符串的转换方法。",
    "GLOBAL_DTY_ITOSTRING": "为类型提供将类型转换为字符串的方法。",
    "GLOBAL_DTY_KEYVALUEPAIR": "定义可设置或检索的键/值对。",
    "GLOBAL_DTY_LONG": "表示一个 64 位有符号整数。",
    "GLOBAL_DTY_LONG_PTR": "表示一个 64 位有符号整数指针（该指针为智能指针，提供内存安全保护）。",
    "GLOBAL_DTY_LPROPERTY": "非值类型属性，提供可以使用Lambda表达式对设置或读取数据进行加工的方法。",
    "GLOBAL_DTY_PARSEHELPER": "数据解析助手，为基本数据类型提供字符串转换为对应数据值的方法。",
    "GLOBAL_DTY_PLATFORMID": "表示跨平台时各个平台的标识。",
    "GLOBAL_DTY_PROPERTY": "值类型属性，为指定数据类型提供设置或读取器。",
    "GLOBAL_DTY_SBYTE": "表示一个 8 位有符号整数。",
    "GLOBAL_DTY_SHORT": "表示一个 16 位有符号整数。",
    "GLOBAL_DTY_SHORT_PTR": "表示一个 16 位有符号整数指针（该指针为智能指针，提供内存安全保护）。",
    "GLOBAL_DTY_SMARTPOINTER": "用于为数据类型提供安全的指针操作方法，并提供内存泄露保护。（在多线程时不推荐使用该指针进行弱指针引用）",
    "GLOBAL_DTY_STRCMP": "用于比较两个字符串的大小。",
    "GLOBAL_DTY_STRING_SP": "字符串智能指针。",
    "GLOBAL_DTY_STRLEN": "用于获取指定字符串的长度。",
    "GLOBAL_DTY_TEST_FLOWDELEGATE": "表示天宇测试组件的流式测试函数委托。",
    "GLOBAL_DTY_TEST_TD": "表示天宇测试组件测试项的函数委托，为TestDelegate的简称。",
    "GLOBAL_DTY_TEST_TE": "表示天宇测试组件实例，为TestEntity的简称。",
    "GLOBAL_DTY_TEST_TESTDELEGATE": "表示天宇测试组件测试集（spec）的函数委托。",
    "GLOBAL_DTY_TEST_TESTENTITY": "表示天宇测试组件实例。",
    "GLOBAL_DTY_TEST_TESTFLOW": "表示天宇测试组件的流式测试集。",
    "GLOBAL_DTY_TEST_TESTOBJECT": "表示天宇测试组件的测试对象，提供数据判断的方法。",
    "GLOBAL_DTY_TEST_TESTSPECDELEGATE": "表示天宇测试组件测试集（spec）的函数委托。",
    "GLOBAL_DTY_TEST_TESTSTATE": "表示测试状态，包含失败、成功和跳过。",
    "GLOBAL_DTY_TEST_TESTTYPE": "表示测试类型，包含跳过、非阻塞式测试和阻塞式测试。",
    "GLOBAL_DTY_TEST_TF": "表示天宇测试组件的流式测试集，为TestFlow的简称。",
    "GLOBAL_DTY_TEST_TFD": "表示天宇测试组件的流式测试函数委托，为FlowDelegate的简称。",
    "GLOBAL_DTY_TEST_TO": "表示天宇测试组件的测试对象，提供数据判断的方法，为TestObject的简称。",
    "GLOBAL_DTY_TEST_TS": "表示测试状态，包含失败、成功和跳过，为TestState的简称。",
    "GLOBAL_DTY_TEST_TSD": "表示天宇测试组件测试集（spec）的函数委托，为TestSpecDelegate的简称。",
    "GLOBAL_DTY_TEST_TT": "表示测试类型，包含跳过、非阻塞式测试和阻塞式测试，为TestType的简称。",
    "GLOBAL_DTY_TIANYUOBJECT": "支持由 Tianyu Native 库中定义的类层次结构中的所有类，并为派生类提供低级别服务。 这是所有 Tianyu Native 类的最终基类；它是类型层次结构的根。",
    "GLOBAL_DTY_TINTEGERBASE": "整型类型的基本类，用于提供所有整数类型的比较、计算转换方法。",
    "GLOBAL_DTY_TYPE": "表示类型声明、类型标识符以及对象哈希值（如果有）。",
    "GLOBAL_DTY_UCHAR": "表示一个无符号字符。",
    "GLOBAL_DTY_UINT16": "表示一个 16 位无符号整数。",
    "GLOBAL_DTY_UINT32": "表示一个 32 位无符号整数。",
    "GLOBAL_DTY_UINT64": "表示一个 64 位无符号整数。",
    "GLOBAL_DTY_ULONG": "表示一个 64 位无符号整数。",
    "GLOBAL_DTY_USHORT": "表示一个 16 位无符号整数。",
    "GLOBAL_DTY_VALUEALIGN": "用于将指定值转换为新值，新值是指定基底中大于或等于指定值的最小值。",
    "GLOBAL_DTY_VALUEALIGNBYPOW": "用于将指定值转换为新值，新值是以指定2的指数次方为基底的大于或等于指定值的最小值。",
    "GLOBAL_DTY__DTY_NATIVE_CPP_DEFAULT_TO_STRING": "用于获取指定对象的类型全名。",
    "GLOBAL__B2STR": "用于将字节转换为字符串。",
    "GLOBAL__B2STR_F": "用于将字节转换为指定格式的字符串。",
    "GLOBAL__C2STR": "用于将字符类型转换为字符串。",
    "GLOBAL__C2STR_F": "用于将字符类型转换为指定格式的字符串。",
    "GLOBAL__D2STR": "用于将双精度实数转换为字符串。",
    "GLOBAL__D2STR_F": "用于将双精度实数转换为指定格式的字符串。",
    "GLOBAL__F2STR": "用于将实数转换为字符串。",
    "GLOBAL__F2STR_F": "用于将实数转换为指定格式的字符串。",
    "GLOBAL__I2STR": "用于将32位整数转换为字符串。",
    "GLOBAL__I2STR_F": "用于将32位整数转换为指定格式的字符串。",
    "GLOBAL__L2STR": "用于将64位长整数转换为字符串。",
    "GLOBAL__L2STR_F": "用于将64位长整数转换为指定格式的字符串。",
    "GLOBAL__NUMBERSCALE": "表示数字格式化进位制。",
    "GLOBAL__S2STR": "用于将16位短整数转换为字符串。",
    "GLOBAL__S2STR_F": "用于将16位短整数转换为指定格式的字符串。",
    "GLOBAL__SB2STR": "用于将有符号字节转换为字符串。",
    "GLOBAL__SB2STR_F": "用于将有符号字节转换为指定格式的字符串。",
    "GLOBAL__UC2STR": "用于将无符号字符类型转换为字符串。",
    "GLOBAL__UC2STR_F": "用于将无符号字符类型转换为指定格式的字符串。",
    "GLOBAL__UI2STR": "用于将无符号32位整数转换为字符串。",
    "GLOBAL__UI2STR_F": "用于将无符号32位整数转换为指定格式的字符串。",
    "GLOBAL__UL2STR": "用于将无符号64位长整数转换为字符串。",
    "GLOBAL__UL2STR_F": "用于将64位无符号长整数转换为指定格式的字符串。",
    "GLOBAL__US2STR": "用于将无符号16位短整数转换为字符串。",
    "GLOBAL__US2STR_F": "用于将无符号16位短整数转换为指定格式的字符串。",

    "GLOBAL_DTY_BOOLEAN_BOOL": "将当前的布尔类型对象隐式转换为布尔值类型。",
    "GLOBAL_DTY_BOOLEAN_CONSTRUCTOR_1": "从指定的布尔值创建布尔类型对象。",
    "GLOBAL_DTY_BOOLEAN_CONSTRUCTOR_2": "从指定的布尔类型对象创建新的布尔类型实例。",
    "GLOBAL_DTY_BOOLEAN_EQUALS_1": "获取一个布尔值指示指定的TianyuObject实例是否与当前对象相等。",
    "GLOBAL_DTY_BOOLEAN_EQUALS_2": "获取一个布尔值指示指定的布尔类型实例是否与当前对象相等。",
    "GLOBAL_DTY_BOOLEAN_GETHASHCODE": "获取一个64位无符号整数，该值等于当前实例的内存哈希值。",
    "GLOBAL_DTY_BOOLEAN_GETTYPEID": "获取一个64位无符号整数，该值等于当前实例的类型标识符（标识符在不同系统平台、不同编译器下的值可能不同）。",
    "GLOBAL_DTY_BOOLEAN_INT32": "将当前的布尔类型对象隐式的转换为等价的32位整数。",
    "GLOBAL_DTY_BOOLEAN_MAXVALUE": "获取一个值，该值为布尔类型的最大值。",
    "GLOBAL_DTY_BOOLEAN_MINVALUE": "获取一个值，该值为布尔类型的最小值。",
    "GLOBAL_DTY_BOOLEAN_OPERATOR_ASS": "‘=’ 运算符重载，将指定的布尔类型对象值赋值给当前对象，并返回等价的布尔值。",
    "GLOBAL_DTY_BOOLEAN_OPERATOR_EQ_1": "比较指定TianyuObject类型对象是否等于当前布尔类型实例。",
    "GLOBAL_DTY_BOOLEAN_OPERATOR_EQ_2": "比较指定的布尔类型实例是否等于当前对象。",
    "GLOBAL_DTY_BOOLEAN_OPERATOR_LAND": "计算当前对象与指定布尔类型实例的逻辑‘与’运算值。",
    "GLOBAL_DTY_BOOLEAN_OPERATOR_LNOT": "计算当前对象的逻辑‘非’运算值。",
    "GLOBAL_DTY_BOOLEAN_OPERATOR_LOR": "计算当前对象与指定布尔类型实例的逻辑‘或’运算值。",
    "GLOBAL_DTY_BOOLEAN_OPERATOR_NE": "比较指定的布尔类型实例是否不等于当前对象。",
    "GLOBAL_DTY_BOOLEAN_PARSE": "将指定字符串转换为等价的布尔值。",
    "GLOBAL_DTY_BOOLEAN_TOSTRING_1": "将当前布尔类型对象转换为指定格式的字符串。",
    "GLOBAL_DTY_BOOLEAN_TOSTRING_2": "将当前布尔类型对象转换为等价的默认格式字符串。",
    "GLOBAL_DTY_BOOLEAN_TRYPARSE_1": "尝试将指定的字符串转换为等价的布尔值。",
    "GLOBAL_DTY_BOOLEAN_TRYPARSE_2": "尝试将指定的字符串转换为等价的布尔类型对象。",
    "GLOBAL_DTY_COLLECTION_COMPARERESULT_EQUAL": "指示比较结果为相等。",
    "GLOBAL_DTY_COLLECTION_COMPARERESULT_GREAT": "指示比较结果为大于。",
    "GLOBAL_DTY_COLLECTION_COMPARERESULT_LESS": "指示比较结果为小于。",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_GETHASHCODE": "获取一个64位无符号整数，该值等于当前实例的内存哈希值。",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_CONSTRUCTOR_1": "从指定的指针（与指针对应的元素数）创建FilterResult对象，可指定是否在销毁对象是释放指针内存。",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_CONSTRUCTOR_2": "从指定的指针（与指针可遍历元素书和指针对应的总元素数）创建FilterResult对象，可指定是否在销毁对象是释放指针内存。",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_CONSTRUCTOR_3": "从指定的FilterResult对象创建新的FilterResult对象。",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_GETTYPEID": "获取一个64位无符号整数，该值等于当前实例的类型标识符（标识符在不同系统平台、不同编译器下的值可能不同）。",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_ISEMPTY": "获取一个布尔值，该值指示当前FilterResult实例内部元素是否为空。",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_ISNULL": "获取一个布尔值，该值指示当前FilterResult实例内部元素是否无效。",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_LENGTH": "获取当前FilterResult实例的元素有效长度。",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_OPERATOR_INDEX": "索引器 - 获取指定索引值的对象引用。",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_TOSTRING": "获取当前FilterResult实例对应的字符串。",
    "GLOBAL_DTY_COLLECTION_ICOLLECTIONS_CONSTRUCTOR": "从指定的属性读取器初始化集合接口。",
    "GLOBAL_DTY_COLLECTION_ICOLLECTIONS_GETITERATOR": "获取一个枚举器对象，该对象等价于集合元素的枚举。",
    "GLOBAL_DTY_COLLECTION_ICOMPAREABLE_COMPARETO": "获取一个值，该值指示当前实例与指定对象的大小关系。",
    "GLOBAL_DTY_COLLECTION_ICOMPAREABLE_OPERATOR_EQ": "比较当前实例与指定对象是否相等。",
    "GLOBAL_DTY_COLLECTION_ICOMPAREABLE_OPERATOR_GE": "获取一个布尔值指示当前实例是否大于等于指定对象。",
    "GLOBAL_DTY_COLLECTION_ICOMPAREABLE_OPERATOR_GT": "获取一个布尔值指示当前实例是否大于指定对象。",
    "GLOBAL_DTY_COLLECTION_ICOMPAREABLE_OPERATOR_LE": "获取一个布尔值指示当前实例是否小于等于指定对象。",
    "GLOBAL_DTY_COLLECTION_ICOMPAREABLE_OPERATOR_LT": "获取一个布尔值指示当前实例是否小于指定对象。",
    "GLOBAL_DTY_COLLECTION_ICOMPAREABLE_OPERATOR_NE": "比较当前实例与指定对象是否不相等。",
    "GLOBAL_DTY_COLLECTION_IEQUATABLE_EQUALS": "获取一个布尔值，该值指示指定对象与当前实例是否相等。",
    "GLOBAL_DTY_COLLECTION_IEQUATABLE_OPERATOR_EQ": "比较当前实例与指定对象是否相等。",
    "GLOBAL_DTY_COLLECTION_IEQUATABLE_OPERATOR_NE": "比较当前实例与指定对象是否不相等。",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_END": "获取一个指针，该指针指向枚举实例的最后一个元素。",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_FILTER": "从当前枚举实例中过滤匹配的元素，并返回由这些元素组成的FilterResult对象。",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_FIND": "从当前枚举实例中获取一个匹配的元素。",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_FINDINDEX": "从当前枚举实例中获取一个匹配的元素索引值。",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_FOREACH": "遍历当前枚举实例中的每一个元素，并为每一个元素执行对应的函数委托。",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_GET": "从当前枚举实例中获取指定索引的元素。",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_GETHASHCODE": "获取一个64位无符号整数，该值等于当前实例的内存哈希值。",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_CONSTRUCTOR_1": "由指定的元素集长度初始化枚举器实例接口。",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_CONSTRUCTOR_2": "从指定的枚举器接口实例初始化新的枚举器实例接口。",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_GETTYPEID": "获取一个64位无符号整数，该值等于当前实例的类型标识符（标识符在不同系统平台、不同编译器下的值可能不同）。",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_NEVER": "从当前枚举实例中过滤未匹配的元素，并返回由这些元素组成的FilterResult对象。",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_SIZE": "获取当前枚举器实例的元素数。",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_SOME": "从当前枚举实例中获取一个未匹配的元素。",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_TOSTRING": "获取当前IIteratorEntity实例对应的字符串。",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY__SIZE": "获取一个属性，该属性用于获取或设置当前实力的元素数。",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_END": "获取一个指针，该指针指向枚举实例的最后一个元素。",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_FILTER": "从当前枚举实例中过滤匹配的元素，并返回由这些元素组成的FilterResult对象。",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_FIND": "从当前枚举实例中获取一个匹配的元素。",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_FINDINDEX": "从当前枚举实例中获取一个匹配的元素索引值。",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_FOREACH": "遍历当前枚举实例中的每一个元素，并为每一个元素执行对应的函数委托。",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_GET": "从当前枚举实例中获取指定索引的元素。",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_GETHASHCODE": "获取一个64位无符号整数，该值等于当前实例的内存哈希值。",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_CONSTRUCTOR_1": "由指定的指针和对应的元素长度创建枚举器实例（可设置销毁对象时是否释放指针内存）。",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_CONSTRUCTOR_2": "由指定的枚举器实例创建新的枚举器实例对象。",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_GETTYPEID": "获取一个64位无符号整数，该值等于当前实例的类型标识符（标识符在不同系统平台、不同编译器下的值可能不同）。",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_NEVER": "从当前枚举实例中过滤未匹配的元素，并返回由这些元素组成的FilterResult对象。",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_SOME": "从当前枚举实例中获取一个未匹配的元素。",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_TOSTRING": "获取当前IteratorEntity实例对应的字符串。",
    "GLOBAL_DTY_COLLECTION_ITERATOR_CURRENT": "获取枚举器当前指向的元素指针。",
    "GLOBAL_DTY_COLLECTION_ITERATOR_END": "获取一个指针，该指针指向枚举实例的最后一个元素。",
    "GLOBAL_DTY_COLLECTION_ITERATOR_FILTER": "从当前枚举实例中过滤匹配的元素，并返回由这些元素组成的FilterResult对象。",
    "GLOBAL_DTY_COLLECTION_ITERATOR_FIND": "从当前枚举实例中获取一个匹配的元素。",
    "GLOBAL_DTY_COLLECTION_ITERATOR_FINDINDEX": "从当前枚举实例中获取一个匹配的元素索引值。",
    "GLOBAL_DTY_COLLECTION_ITERATOR_FOREACH": "遍历当前枚举实例中的每一个元素，并为每一个元素执行对应的函数委托。",
    "GLOBAL_DTY_COLLECTION_ITERATOR_GETHASHCODE": "获取一个64位无符号整数，该值等于当前实例的内存哈希值。",
    "GLOBAL_DTY_COLLECTION_ITERATOR_CONSTRUCTOR_1": "从指定的枚举器实例创建枚举器实例。",
    "GLOBAL_DTY_COLLECTION_ITERATOR_CONSTRUCTOR_2": "从指定的枚举器对象创建新的枚举器实例。",
    "GLOBAL_DTY_COLLECTION_ITERATOR_GETTYPEID": "获取一个64位无符号整数，该值等于当前实例的类型标识符（标识符在不同系统平台、不同编译器下的值可能不同）。",
    "GLOBAL_DTY_COLLECTION_ITERATOR_NEVER": "从当前枚举实例中过滤未匹配的元素，并返回由这些元素组成的FilterResult对象。",
    "GLOBAL_DTY_COLLECTION_ITERATOR_NEXT": "将索引指向下一个元素并返回当前枚举器当前指向的元素指针。",
    "GLOBAL_DTY_COLLECTION_ITERATOR_RESET": "重新设置枚举器的元素指向到第一个元素。",
    "GLOBAL_DTY_COLLECTION_ITERATOR_SIZE": "获取当前枚举器实例的元素数。",
    "GLOBAL_DTY_COLLECTION_ITERATOR_SOME": "从当前枚举实例中获取一个未匹配的元素。",
    "GLOBAL_DTY_COLLECTION_ITERATOR_TOSTRING": "获取当前Iterator实例对应的字符串。",
    "GLOBAL_DTY_DOUBLE_COMPARETO": "比较当前双精度实数与指定双精度实数的大小。（实数大小比较依赖于精度设置）",
    "GLOBAL_DTY_DOUBLE_CONSTRUCTOR_1": "从指定的双精度实数值创建双精度实数对象。",
    "GLOBAL_DTY_DOUBLE_CONSTRUCTOR_2": "从指定的双精度实数值创建双精度实数对象，并设置比较精度。",
    "GLOBAL_DTY_DOUBLE_CONSTRUCTOR_3": "从指定的双精度实数实例创建新的双精度实数对象。",
    "GLOBAL_DTY_DOUBLE_DOUBLE": "将当前双精度实数对象隐式转换为等价的双精度实数值。",
    "GLOBAL_DTY_DOUBLE_EPSILON": "表示大于零的最小正 Double 值。 此字段为常数。",
    "GLOBAL_DTY_DOUBLE_EQUALS_1": "获取一个布尔值，该值指示指定TianyuObject对象是否与当前实例相等。",
    "GLOBAL_DTY_DOUBLE_EQUALS_2": "获取一个布尔值，该值指示指定双精度实数对象是否与当前实例相等。",
    "GLOBAL_DTY_DOUBLE_GETHASHCODE": "获取一个64位无符号整数，该值等于当前实例的内存哈希值。",
    "GLOBAL_DTY_DOUBLE_GETTYPEID": "获取一个64位无符号整数，该值等于当前实例的类型标识符（标识符在不同系统平台、不同编译器下的值可能不同）。",
    "GLOBAL_DTY_DOUBLE_MAXVALUE": "表示 Double 的最大可能值。 此字段为常数。",
    "GLOBAL_DTY_DOUBLE_MINVALUE": "表示 Double 的最小可能值。 此字段为常数。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_ADD": "将当前实例与指定Double对象相加并将结果以double值类型返回。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_ADD_ASS": "将当前实例与指定Double对象相加并将当前实例的值设置为相加之后的结果，并将结果以double值类型返回。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_ASS": "将指定Double对象的值赋值给当前实例，并将值以double值类型返回。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_DIV": "将当前实例与指定Double对象相除并将结果以double值类型返回。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_DIV_ASS": "将当前实例与指定Double对象相除并将当前实例的值设置为相加之后的结果，并将结果以double值类型返回。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_EQ_1": "获取一个布尔值，该值指示指定TianyuObject对象是否与当前实例相等。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_EQ_2": "获取一个布尔值，该值指示指定对象是否与当前实例相等。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_GE": "获取一个布尔值，该值指示指定当前实例是否大于等于当前对象。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_GT": "获取一个布尔值，该值指示指定当前实例是否大于当前对象。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_LE": "获取一个布尔值，该值指示指定当前实例是否小于等于当前对象。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_LT": "获取一个布尔值，该值指示指定当前实例是否小于当前对象。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_MUL": "将当前实例与指定Double对象相乘并将结果以double值类型返回。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_MUL_ASS": "将当前实例与指定Double对象相乘并将当前实例的值设置为相加之后的结果，并将结果以double值类型返回。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_NE": "获取一个布尔值，该值指示指定对象是否与当前实例不相等。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_SD_1": "将当前实例的值减去1.0并将结果以double值类型返回。（该操作会更新当前实例的数据）",
    "GLOBAL_DTY_DOUBLE_OPERATOR_SD_2": "将当前实例的值减去1.0并更新当前实例的值，将原值以double值类型返回。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_SI_1": "将当前实例的值增加1.0并将结果以double值类型返回。（该操作会更新当前实例的数据）",
    "GLOBAL_DTY_DOUBLE_OPERATOR_SI_2": "将当前实例的值增加1.0并更新当前实例的值，将原值以double值类型返回。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_SUB": "将当前实例的值减去指定的Double对象，并将结果以double值类型返回。",
    "GLOBAL_DTY_DOUBLE_OPERATOR_SUB_ASS": "将当前实例的值减去指定Double对象并将当前实例的值设置为相加之后的结果，并将结果以double值类型返回。",
    "GLOBAL_DTY_DOUBLE_PARSE": "将指定的字符串转换为等价的double值。",
    "GLOBAL_DTY_DOUBLE_PRECISION": "表示当前Double对象的可靠精度。",
    "GLOBAL_DTY_DOUBLE_TOSTRING_1": "获取一个指定格式的字符串，该字符串等价于当前实例。",
    "GLOBAL_DTY_DOUBLE_TOSTRING_2": "获取一个字符串等价于当前实例。",
    "GLOBAL_DTY_DOUBLE_TRYPARSE_1": "尝试将指定字符串转换为等价的double值类型。",
    "GLOBAL_DTY_DOUBLE_TRYPARSE_2": "尝试将指定字符串转换为等价的Double类型对象。",
    "GLOBAL_DTY_EVENTARGS_EMPTY": "表示一个默认的不包含事件数据的空对象。",
    "GLOBAL_DTY_EVENTARGS_GETHASHCODE": "获取一个64位无符号整数，该值等于当前实例的内存哈希值。",
    "GLOBAL_DTY_EVENTARGS_GETTYPEID": "获取一个64位无符号整数，该值等于当前实例的类型标识符（标识符在不同系统平台、不同编译器下的值可能不同）。",
    "GLOBAL_DTY_EVENTARGS_TOSTRING": "获取当前EventArgs实例对应的字符串。",
    "GLOBAL_DTY_EVENTHANDLERITEM_HANDLER": "表示当前事件处理项的处理函数委托。",
    "GLOBAL_DTY_EVENTHANDLERITEM_ID": "表示当前事件处理项的标识符。",
    "GLOBAL_DTY_EVENTHANDLERITEM_NEXT": "表示下一个事件处理项。（null值表示当前处理项为最后一项）",
    "GLOBAL_DTY_EVENTHANDLER_ADDHANDLER": "向当前事件处理对象中添加一个新的处理项。",
    "GLOBAL_DTY_EVENTHANDLER_CLEAR": "清空当前事件处理对象中的所有处理项。",
    "GLOBAL_DTY_EVENTHANDLER_COUNT": "表示当前事件处理对象中的处理项个数。",
    "GLOBAL_DTY_EVENTHANDLER_GETHASHCODE": "获取一个64位无符号整数，该值等于当前实例的内存哈希值。",
    "GLOBAL_DTY_EVENTHANDLER_GETTYPEID": "获取一个64位无符号整数，该值等于当前实例的类型标识符（标识符在不同系统平台、不同编译器下的值可能不同）。",
    "GLOBAL_DTY_EVENTHANDLER_INVOKE": "触发一次事件处理。",
    "GLOBAL_DTY_EVENTHANDLER_REMOVEHANDLER": "从当前事件处理对象中移除指定的事件项。",
    "GLOBAL_DTY_EVENTHANDLER_TOSTRING": "获取当前EventHandler实例对应的字符串。",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_COMPARETO": "比较当前实例与指定Exception对象的大小。",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_EQUALS": "判断当前实例是否与指定对象相等。",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_GETEXCEPTIONID": "获取一个64为无符号长整数，该值指示当前Exception类型的异常标识。",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_GETTYPEID": "获取一个64位无符号整数，该值等于当前实例的类型标识符（标识符在不同系统平台、不同编译器下的值可能不同）。",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_OPERATOR_EQ": "比较当前实例与指定对象是否相等。",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_OPERATOR_GE": "获取一个布尔值指示当前实例是否大于等于指定对象。",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_OPERATOR_GT": "获取一个布尔值，该值指示指定当前实例是否大于当前对象。",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_OPERATOR_LE": "获取一个布尔值，该值指示指定当前实例是否小于等于当前对象。",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_OPERATOR_LT": "获取一个布尔值，该值指示指定当前实例是否小于当前对象。",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_OPERATOR_NE": "获取一个布尔值，该值指示指定对象是否与当前实例不相等。",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_TOSTRING": "获取当前Exception实例对应的字符串。",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_WHAT": "获取一个等价于异常信息的字符串。",
    "GLOBAL_DTY_FLOAT_COMPARETO": "比较当前实例与指定Float对象的大小。",
    "GLOBAL_DTY_FLOAT_CONSTRUCTOR_1": "由指定的float值和Float可靠精度创建Float对象。",
    "GLOBAL_DTY_FLOAT_CONSTRUCTOR_2": "由指定的float值创建Float对象。",
    "GLOBAL_DTY_FLOAT_CONSTRUCTOR_3": "由指定的Float对象实例创建新的Float对象。",
    "GLOBAL_DTY_FLOAT_EPSILON": "表示大于零的最小正 Float 值。 此字段为常数。",
    "GLOBAL_DTY_FLOAT_EQUALS_1": "获取一个布尔值，该值指示指定TianyuObject对象是否与当前实例相等。",
    "GLOBAL_DTY_FLOAT_EQUALS_2": "获取一个布尔值指示指定的Float类型实例是否与当前对象相等。",
    "GLOBAL_DTY_FLOAT_FLOAT": "将当前Float实例隐式转换为等价的float值类型。",
    "GLOBAL_DTY_FLOAT_GETHASHCODE": "获取一个64位无符号整数，该值等于当前实例的内存哈希值。",
    "GLOBAL_DTY_FLOAT_GETTYPEID": "获取一个64位无符号整数，该值等于当前实例的类型标识符（标识符在不同系统平台、不同编译器下的值可能不同）。",
    "GLOBAL_DTY_FLOAT_MAXVALUE": "表示 Float 的最大可能值。 此字段为常数。",
    "GLOBAL_DTY_FLOAT_MINVALUE": "表示 Float 的最小可能值。 此字段为常数。",
    "GLOBAL_DTY_FLOAT_OPERATOR_ADD": "将当前实例与指定Float对象相加并将结果以float值类型返回。",
    "GLOBAL_DTY_FLOAT_OPERATOR_ADD_ASS": "将当前实例与指定Float对象相加并将当前实例的值设置为相加之后的结果，并将结果以float值类型返回。",
    "GLOBAL_DTY_FLOAT_OPERATOR_ASS": "将指定Float对象的值赋值给当前实例，并将值以float值类型返回。",
    "GLOBAL_DTY_FLOAT_OPERATOR_DIV": "将当前实例与指定Float对象相除并将结果以float值类型返回。",
    "GLOBAL_DTY_FLOAT_OPERATOR_DIV_ASS": "将当前实例与指定Float对象相除并将当前实例的值设置为相除之后的结果，并将结果以float值类型返回。",
    "GLOBAL_DTY_FLOAT_OPERATOR_EQ_1": "获取一个布尔值，该值指示指定TianyuObject对象是否与当前实例相等。",
    "GLOBAL_DTY_FLOAT_OPERATOR_EQ_2": "获取一个布尔值，该值指示指定对象是否与当前实例相等。",
    "GLOBAL_DTY_FLOAT_OPERATOR_GE": "获取一个布尔值指示当前实例是否大于等于指定对象。",
    "GLOBAL_DTY_FLOAT_OPERATOR_GT": "获取一个布尔值，该值指示指定当前实例是否大于当前对象。",
    "GLOBAL_DTY_FLOAT_OPERATOR_LE": "获取一个布尔值，该值指示指定当前实例是否小于等于当前对象。",
    "GLOBAL_DTY_FLOAT_OPERATOR_LT": "获取一个布尔值，该值指示指定当前实例是否小于当前对象。",
    "GLOBAL_DTY_FLOAT_OPERATOR_MUL": "将当前实例与指定Float对象相乘并将结果以float值类型返回。",
    "GLOBAL_DTY_FLOAT_OPERATOR_MUL_ASS": "将当前实例与指定Float对象相乘并将当前实例的值设置为相乘之后的结果，并将结果以float值类型返回。",
    "GLOBAL_DTY_FLOAT_OPERATOR_NE": "比较当前实例与指定对象是否不相等。",
    "GLOBAL_DTY_FLOAT_OPERATOR_SD_1": "将当前实例的值减去1.0并将结果以float值类型返回。（该操作会更新当前实例的数据）",
    "GLOBAL_DTY_FLOAT_OPERATOR_SD_2": "将当前实例的值减去1.0并更新当前实例的值，将原值以float值类型返回。",
    "GLOBAL_DTY_FLOAT_OPERATOR_SI_1": "将当前实例的值增加1.0并将结果以float值类型返回。（该操作会更新当前实例的数据）",
    "GLOBAL_DTY_FLOAT_OPERATOR_SI_2": "将当前实例的值增加1.0并更新当前实例的值，将原值以float值类型返回。",
    "GLOBAL_DTY_FLOAT_OPERATOR_SUB": "将当前实例的值减去指定的Float对象，并将结果以float值类型返回。",
    "GLOBAL_DTY_FLOAT_OPERATOR_SUB_ASS": "将当前实例的值减去指定Float对象并将当前实例的值设置为相减之后的结果，并将结果以float值类型返回。",
    "GLOBAL_DTY_FLOAT_PARSE": "将指定的字符串转换为等价的float值。",
    "GLOBAL_DTY_FLOAT_PRECISION": "表示当前Float对象的可靠精度。",
    "GLOBAL_DTY_FLOAT_TOSTRING_1": "获取一个指定格式的字符串，该字符串等价于当前实例。",
    "GLOBAL_DTY_FLOAT_TOSTRING_2": "获取一个字符串等价于当前实例。",
    "GLOBAL_DTY_FLOAT_TRYPARSE_1": "尝试将指定字符串转换为等价的float值类型。",
    "GLOBAL_DTY_FLOAT_TRYPARSE_2": "尝试将指定字符串转换为等价的Float类型对象。",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_1": "将指定的字符类型值转换为等价的格式化字符串。",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_10": "将指定的双精度浮点值转换为等价的格式化字符串。",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_11": "将指定的布尔值转换为等价的格式化字符串。",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_12": "从指定的IToString对象获取字符串。",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_13": "获取与指定类型等价的字符串。",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_2": "将指定的无符号字符类型值转换为等价的格式化字符串。",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_3": "将指定的16位短整数值转换为等价的格式化字符串。",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_4": "将指定的16位无符号短整数类型值转换为等价的格式化字符串。",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_5": "将指定的32位整数值转换为等价的格式化字符串。",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_6": "将指定的32位无符号整数类型值转换为等价的格式化字符串。",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_7": "将指定的64位长整数值转换为等价的格式化字符串。",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_8": "将指定的64位无符号长整数值转换为等价的格式化字符串。",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_9": "将指定的单精度实数值转换为等价的格式化字符串。",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AF_ZA ": "布尔语(南非)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AM_AM": "阿姆哈拉语(阿姆哈拉)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_AE": "阿拉伯语(阿拉伯联合酋长国)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_BH": "阿拉伯语(巴林)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_DZ": "阿拉伯语(阿尔及利亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_EG": "阿拉伯语(埃及)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_IQ": "阿拉伯语(伊拉克)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_JO": "阿拉伯语(乔丹)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_KW": "阿拉伯语(科威特)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_LB": "阿拉伯语(黎巴嫩)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_LY": "阿拉伯语(利比亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_MA": "阿拉伯语(摩洛哥)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_OM": "阿拉伯语(阿曼)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_QA": "阿拉伯语(卡塔尔)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_SA": "阿拉伯语(沙特阿拉伯)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_SY": "阿拉伯语(叙利亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_TN": "阿拉伯语(突尼斯)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_YE": "阿拉伯语(也门)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AS_AS": "阿萨姆人(阿萨姆语)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AZ_AZ_CYRL": "阿塞拜疆语(西里尔语)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AZ_AZ_LATN": "阿塞拜疆语(拉丁语)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_BE_BY": "白俄罗斯(白俄罗斯)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_BG_BG": "保加利亚(保加利亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_CA_ES": "加泰罗尼亚语(卡塔拉)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_CD_CZ": "捷克(捷克)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_DA_DK": "丹麦(丹麦)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_DE_AT": "德国(奥地利)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_DE_CH": "德国(瑞士)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_DE_DE": "德国(德国)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_DE_LI": "德国(列支敦士登)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_DE_LU": "德国(卢森堡)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_AU": "英语(澳大利亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_BZ": "英语(伯利兹)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_CA": "英语(加拿大)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_CB": "英语(加勒比)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_IE": "英语(爱尔兰)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_IN": "英语(印度)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_JM": "英语(牙买加)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_NZ": "英语(新西兰)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_PH": "英语(菲鲁宾)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_TT": "英语(特立尼达)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_UK": "英语(英国)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_US": "英语(美国)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_ZA": "英语(南非)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_ZW": "英语(津巴布韦)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_AR": "西班牙语(阿根廷)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_BO": "西班牙语(玻利维亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_CL": "西班牙语(智利)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_CO": "西班牙语(哥伦比亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_CR": "西班牙语(哥斯达黎加)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_DO": "西班牙语(多米尼加共和国)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_EC": "西班牙语(厄瓜多尔)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_ES": "西班牙语(西班牙传统)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_GT": "西班牙语(危地马拉)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_HN": "西班牙语(洪都拉斯)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_MX": "西班牙语(墨西哥)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_NI": "西班牙语(尼加拉瓜)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_PA": "西班牙语(巴拿马)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_PE": "西班牙语(秘鲁)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_PR": "西班牙语(波多黎各)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_PY": "西班牙语(巴拉圭)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_SV": "西班牙语(萨尔瓦多)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_UY": "西班牙语(乌拉圭)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_VE": "西班牙语(委内瑞拉)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ET_EE": "爱沙尼亚(爱沙尼亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EU_ES": "巴斯克语(巴斯克)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_FI_FI": "芬兰(芬兰)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_FO_FO": "-",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_FR_BE": "法语(比利时)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_FR_CA": "法语(加拿大)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_FR_CH": "法国(瑞士)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_FR_FR": "法国(法国)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_FR_LU": "法语(卢森堡)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_FR_MC": "法语(摩纳哥)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_GL_ES": "加利西亚语(加利西亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_GU_IN": "古吉拉特语(印度)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_HE_IL": "希伯来语(以色列)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_HI_IN": "印度北部(印度)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_HR_HR": "克罗地亚(克罗地亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_HU_HU": "匈牙利(匈牙利)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_HY_AM": "亚美尼亚(亚美尼亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ID_ID": "印度尼西亚(印尼)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_IS_IS": "冰岛(冰岛)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_IT_CH": "意大利(瑞士)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_IT_IT": "意大利(意大利)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_JA_JP": "日本(日本)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_KK_KZ": "哈萨克斯坦(哈萨克斯坦)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_KN_IN": "埃纳德语(印度)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_KO_KR": "朝鲜(韩国)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_KY_KZ": "吉尔吉斯(哈萨克斯坦)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_LT_LT": "立陶宛(立陶宛)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_LV_LV": "拉脱维亚(拉脱维亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_MN_MN": "蒙古(蒙古)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_MR_IN": "马拉地语(印度)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_MS_BN": "马来语(文莱)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_MS_MY": "马来语(马来西亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_NB_NO": "挪威语(挪威)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_NL_BE": "荷兰(比利时)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_NL_NL": "荷兰(荷兰)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_NN_NO": "挪威语(新挪威)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_PA_IN": "旁遮普(印度)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_PL_PL": "波兰(波兰)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_PT_BR": "葡萄牙语(巴西)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_PT_PT": "葡萄牙语(葡萄牙)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_RO_MO": "罗马尼亚语(摩尔多瓦)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_RO_RO": "罗马尼亚语(罗马尼亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_RU_MO": "俄罗斯(摩尔多瓦)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_RU_RU": "俄罗斯(俄罗斯)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SA_IN": "梵文(印度)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SK_SK": "斯洛伐克(斯洛伐克)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SL_SI": "斯洛文尼亚(斯洛文尼亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SQ_AL": "阿尔巴尼亚语(阿尔巴尼亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SR_SP_CYRL": "塞尔维亚(西里尔语)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SR_SP_LATN": "塞尔维亚(拉丁语)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SV_FI": "瑞典(芬兰)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SV_SE": "瑞典(瑞典)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SW_KE": "斯瓦西语(肯尼亚)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_TA_IN": "泰米尔语(印度)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_TE_IN": "泰卢固语(印度)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_TH_TH": "泰国(泰国)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_TR_TR": "土耳其(土耳其)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_TT_RU": "鞑靼语(俄罗斯)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_UZ_UZ_CYRL": "乌兹别克语(乌兹别克斯坦-西里尔语)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_UZ_UZ_LATN": "乌兹别克语(乌兹别克-拉丁语)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_VI_VN": "越南(越南)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ZH_CN": "中文(简体)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ZH_HK": "中文(香港)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ZH_MO": "中文(澳门特别行政区)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ZH_SG": "中文(新加坡)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ZH_TW": "中文(台湾)",
    "GLOBAL_DTY_IFORMATTER_TOSTRING": "获取当前IFormatter实例对应的字符串。",
    "GLOBAL_DTY_IOBJECTCONVERTER_TRYCONVERT_1": "尝试从指定字节数组更新当前实例。",
    "GLOBAL_DTY_IOBJECTCONVERTER_TRYCONVERT_2": "尝试从指定字节数组的指定位置开始进行反序列化并更新当前实例。",
    "GLOBAL_DTY_IPROPERTYGETTER_GET": "属性获取器。",
    "GLOBAL_DTY_IPROPERTYGETTER_T": "属性获取器，将当前对象隐式转换为指定类型。",
    "GLOBAL_DTY_IPROPERTYSETTER_OPERATOR_ASS_1": "从指定的类型对象更新当前对象。",
    "GLOBAL_DTY_IPROPERTYSETTER_OPERATOR_ASS_2": "从指定的属性获取器初始化当前对象。",
    "GLOBAL_DTY_IPROPERTYSETTER_SET": "属性设置器。",
    "GLOBAL_DTY_ISTRINGCONVERTER_TRYCONVERT_1": "尝试将指定字节数组转换为当前实例所对应的字符串。",
    "GLOBAL_DTY_ISTRINGCONVERTER_TRYCONVERT_2": "尝试从指定字节数组的指定索引开始，将字节数组转换为当前对象所对应的字符串。",
    "GLOBAL_DTY_ITOSTRING_TOSTRING": "获取一个字符串等价于当前IToString接口的实现。",
    "GLOBAL_DTY_KEYVALUEPAIR_CONSTRUCTOR_1": "通过指定的键、值创建键值对实例。",
    "GLOBAL_DTY_KEYVALUEPAIR_CONSTRUCTOR_2": "通过指定的键值对实例创建新的键值对实例。",
    "GLOBAL_DTY_KEYVALUEPAIR_GETHASHCODE": "获取一个64位无符号整数，该值等于当前实例的内存哈希值。",
    "GLOBAL_DTY_KEYVALUEPAIR_GETTYPEID": "获取一个64位无符号整数，该值等于当前实例的类型标识符（标识符在不同系统平台、不同编译器下的值可能不同）。",
    "GLOBAL_DTY_KEYVALUEPAIR_KEY": "表示当前键值对实例中的键。",
    "GLOBAL_DTY_KEYVALUEPAIR_TOSTRING": "获取当前KeyValuePair实例对应的字符串。",
    "GLOBAL_DTY_KEYVALUEPAIR_VALUE": "表示当前键值对实例中的值。",
    "GLOBAL_DTY_LPROPERTY_CONSTRUCTOR_1": "通过指定的获取器、设置器的lambda表达式创建非值类属性实例。",
    "GLOBAL_DTY_LPROPERTY_CONSTRUCTOR_2": "通过指定的非值类属性实例创建新的实例。",
    "GLOBAL_DTY_LPROPERTY_GET": "属性获取器。",
    "GLOBAL_DTY_LPROPERTY_GETHASHCODE": "获取一个64位无符号整数，该值等于当前实例的内存哈希值。",
    "GLOBAL_DTY_LPROPERTY_GETTYPEID": "获取一个64位无符号整数，该值等于当前实例的类型标识符（标识符在不同系统平台、不同编译器下的值可能不同）。",
    "GLOBAL_DTY_LPROPERTY_OPERATOR_ASS_1": "通过指定的类型对象值更新当前属性实例。",
    "GLOBAL_DTY_LPROPERTY_OPERATOR_ASS_2": "通过指定的属性获取器更新当前属性实例。",
    "GLOBAL_DTY_LPROPERTY_SET": "属性设置器。",
    "GLOBAL_DTY_LPROPERTY_T": "将当前属性对象隐式转换为指定类型。",
    "GLOBAL_DTY_LPROPERTY_TOSTRING": "获取当前LProperty实例对应的字符串。",
    "GLOBAL_DTY_PARSEHELPER_PARSE_1": "将指定字符串转换为字符类型。",
    "GLOBAL_DTY_PARSEHELPER_PARSE_10": "将指定字符串转换为双精度实数类型。",
    "GLOBAL_DTY_PARSEHELPER_PARSE_11": "将指定字符串转换为布尔类型。",
    "GLOBAL_DTY_PARSEHELPER_PARSE_12": "将指定字符串转换为指定数据类型。（公共数据解析助手当前暂不提供该方法）",
    "GLOBAL_DTY_PARSEHELPER_PARSE_2": "将指定字符串转换为无符号字符类型。",
    "GLOBAL_DTY_PARSEHELPER_PARSE_3": "将指定字符串转换为16位短整数类型。",
    "GLOBAL_DTY_PARSEHELPER_PARSE_4": "将指定字符串转换为16位无符号短整数类型。",
    "GLOBAL_DTY_PARSEHELPER_PARSE_5": "将指定字符串转换为32位整数类型。",
    "GLOBAL_DTY_PARSEHELPER_PARSE_6": "将指定字符串转换为32位无符号整数类型。",
    "GLOBAL_DTY_PARSEHELPER_PARSE_7": "将指定字符串转换为64位长整数类型。",
    "GLOBAL_DTY_PARSEHELPER_PARSE_8": "将指定字符串转换为64位无符号长整数类型。",
    "GLOBAL_DTY_PARSEHELPER_PARSE_9": "将指定字符串转换为单精度实数类型。",
    "GLOBAL_DTY_PLATFORMID_MACOSX ": "表示当前系统平台为MacOS。",
    "GLOBAL_DTY_PLATFORMID_OTHER": "表示当前系统平台为未知平台。",
    "GLOBAL_DTY_PLATFORMID_UNIX": "表示当前系统平台位Unix系列。",
    "GLOBAL_DTY_PLATFORMID_WINDOWS": "表示当前系统平台为Windows。",
    "GLOBAL_DTY_PROPERTY_CONSTRUCTOR": "由指定值提供初始值并创建值类型属性实例。",
    "GLOBAL_DTY_PROPERTY_GET": "属性获取器。",
    "GLOBAL_DTY_PROPERTY_GETHASHCODE": "获取一个64位无符号整数，该值等于当前实例的内存哈希值。",
    "GLOBAL_DTY_PROPERTY_GETTYPEID": "获取一个64位无符号整数，该值等于当前实例的类型标识符（标识符在不同系统平台、不同编译器下的值可能不同）。",
    "GLOBAL_DTY_PROPERTY_OPERATOR_ASS_1": "通过指定的类型对象值更新当前属性实例。",
    "GLOBAL_DTY_PROPERTY_OPERATOR_ASS_2": "通过指定的属性获取器更新当前属性实例。",
    "GLOBAL_DTY_PROPERTY_SET": "属性设置器。",
    "GLOBAL_DTY_PROPERTY_T": "将当前对象隐式转换为指定的类型。",
    "GLOBAL_DTY_PROPERTY_TOSTRING": "获取当前Property实例对应的字符串。",
    "GLOBAL_DTY_SMARTPOINTER_CONSTRUCTOR_1": "从指定的指针创建智能指针对象。",
    "GLOBAL_DTY_SMARTPOINTER_CONSTRUCTOR_2": "从指定的指针创建智能指针对象，同时设置指针有效内存长度。",
    "GLOBAL_DTY_SMARTPOINTER_CONSTRUCTOR_3": "从指定的指针创建智能指针对象，并手动设置是否为指针弱引用。",
    "GLOBAL_DTY_SMARTPOINTER_CONSTRUCTOR_4": "从指定的指针创建智能指针对象，同时设置指针有效长度并设置指针弱引用。",
    "GLOBAL_DTY_SMARTPOINTER_CONSTRUCTOR_5": "从指定的智能指针对象创建新的智能指针对象。（根据编译宏定义可能存在不同的效果，默认为指针移动，即被拷贝的指针将会被设置为空，所有权将移动到新的指针中）",
    "GLOBAL_DTY_SMARTPOINTER_COPY": "释放当前指针，并从指定的智能指针更新当前指针。（该操作为不安全操作，请确保使用拷贝的源指针为弱指针，否则存在多重释放问题。）",
    "GLOBAL_DTY_SMARTPOINTER_GETHASHCODE": "获取一个64位无符号整数，该值等于当前实例的内存哈希值。",
    "GLOBAL_DTY_SMARTPOINTER_GETTYPEID": "获取一个64位无符号整数，该值等于当前实例的类型标识符（标识符在不同系统平台、不同编译器下的值可能不同）。",
    "GLOBAL_DTY_SMARTPOINTER_GETWEAK": "从当前智能指针创建一个新的弱引用指针。",
    "GLOBAL_DTY_SMARTPOINTER_ISNULL": "获取一个布尔值，该值指示当前智能指针是否为空指针。",
    "GLOBAL_DTY_SMARTPOINTER_MOVE": "释放当前指针后从指定智能指针更新当前指针，并将指定指针设置为空指针。",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_ARROW_1": "从当前实例的指针中提取指定成员。",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_ARROW_2": "从当前实例的指针中提取指定成员，并将提取的成员转换为const元素。",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_EQ_1": "获取一个布尔值，该值指示指定智能指针对象是否与当前实例相等。",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_EQ_2": "获取一个布尔值，该值指示指定类型对象是否与当前实例相等。",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_INDEX_1": "获取当前指针中对应索引值的元素。",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_INDEX_2": "获取当前指针中对应索引值的元素，并将元素转换为const元素。",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_NE_1": "获取一个布尔值，该值指示指定智能指针对象是否与当前实例不相等。",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_NE_2": "获取一个布尔值，该值指示指定类型对象是否与当前实例不相等。",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_PTR": "获取当前指针的第一个元素引用。",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_REF_1": "获取一个64为无符号整数表示当前指针的地址。",
    "GLOBAL_DTY_SMARTPOINTER_SIZE": "表示当前指针包含的元素格式。",
    "GLOBAL_DTY_SMARTPOINTER_T": "将当前智能指针隐式的转换为指定类型指针。",
    "GLOBAL_DTY_SMARTPOINTER_TOSTRING": "获取当前SmartPointer实例对应的字符串。",
    "GLOBAL_DTY_SMARTPOINTER__POINTER": "表示当前智能指针的实际元素指针。",
    "GLOBAL_DTY_SMARTPOINTER__SIZE": "表示当前智能指针的元素个数属性。",
    "GLOBAL_DTY_TEST_TESTENTITY_CANCELASSERT": "用于取消测试组件实例的阻塞式测试模式，并转换为非阻塞式测试模式。",
    "GLOBAL_DTY_TEST_TESTENTITY_CONSTRUCTOR_1": "由指定的测试实例名、传入参数初始化测试实例对象。（使用::string类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_CONSTRUCTOR_2": "由指定的测试实例名、传入参数初始化测试实例对象。（使用char*类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_CONSTRUCTOR_3": "由现有的测试实例初始化新的测试实例对象。",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNEXCEPTIONTEST_1": "执行一个期望异常的测试项。（使用::string类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNEXCEPTIONTEST_2": "执行一个期望异常的测试项。（使用char*类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNEXCEPTIONTEST_3": "执行一个探测指定异常的测试项。（使用char*类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNEXCEPTIONTEST_4": "执行一个探测指定异常的测试项。（使用::string类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNFLOW_1": "执行一个流式测试项。（使用char*类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNFLOW_2": "执行一个流式测试项。（使用::string类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNTEST_1": "执行一个常规测试项。（使用char*类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNTEST_2": "执行一个常规测试项，该项可设置是否忽略异常。（使用char*类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNTEST_3": "执行一个常规测试项。（使用::string类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNTEST_4": "执行一个常规测试项，该项可设置是否忽略异常。（使用::string类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_SETASSERT": "设置当前测试实例为阻塞式测试模式，此模式下，失败测试项之后的所有测试都将被跳过。",
    "GLOBAL_DTY_TEST_TESTENTITY_STARTSPEC_1": "开始一个新的测试实例。（使用::string类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_STARTSPEC_2": "开始一个新的测试实例，可以设置是否忽略异常。（使用::string类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_STARTSPEC_3": "开始一个新的测试实例，可以设置是否忽略异常以及是否依赖前序测试实力的状态（对阻塞式测试模式有效）。（使用::string类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_STARTSPEC_4": "开始一个新的测试实例。（使用char*类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_STARTSPEC_5": "开始一个新的测试实例，可以设置是否忽略异常。（使用char*类型）",
    "GLOBAL_DTY_TEST_TESTENTITY_STARTSPEC_6": "开始一个新的测试实例，可以设置是否忽略异常以及是否依赖前序测试实力的状态（对阻塞式测试模式有效）。（使用char*类型）",
    "GLOBAL_DTY_TEST_TESTFLOW_CONSTRUCTOR_1": "从指定的流式测试名、测试实例对象、测试输出文件、测试层级、控制台标识初始化流式测试实例。",
    "GLOBAL_DTY_TEST_TESTFLOW_CONSTRUCTOR_2": "从指定的流式测试对象初始化新的流式测试实例。",
    "GLOBAL_DTY_TEST_TESTFLOW_ITEMEXCEPTION_1": "执行期待异常的流式测试项。（使用::string类型）",
    "GLOBAL_DTY_TEST_TESTFLOW_ITEMEXCEPTION_2": "执行期待异常的流式测试项。（使用char*类型）",
    "GLOBAL_DTY_TEST_TESTFLOW_ITEMEXCEPTION_3": "执行期待指定异常的流式测试项。（使用char*类型）",
    "GLOBAL_DTY_TEST_TESTFLOW_ITEMEXCEPTION_4": "执行期待指定异常的流式测试项。（使用::string类型）",
    "GLOBAL_DTY_TEST_TESTFLOW_ITEM_1": "执行一个常规的流式测试项。（使用::string类型）",
    "GLOBAL_DTY_TEST_TESTFLOW_ITEM_2": "执行一个常规的流式测试项。（使用char*类型）",
    "GLOBAL_DTY_TEST_TESTFLOW_SET": "强制设置当前流式测试为失败。",
    "GLOBAL_DTY_TEST_TESTFLOW_SKIP": "强制设置当前流式测试被跳过。",
    "GLOBAL_DTY_TEST_TESTOBJECT_EQ_1": "判断指定的两个字符串是否相等。",
    "GLOBAL_DTY_TEST_TESTOBJECT_EQ_2": "判断指定的两个TianyuObject对象是否相等。",
    "GLOBAL_DTY_TEST_TESTOBJECT_EQ_3": "判断指定的两个模板类型对象是否相等。",
    "GLOBAL_DTY_TEST_TESTOBJECT_GETSTATE": "获取当前测试对象的测试结果。",
    "GLOBAL_DTY_TEST_TESTOBJECT_GT_1": "判断指定第一个字符串是否大于第二个字符串。",
    "GLOBAL_DTY_TEST_TESTOBJECT_GT_2": "判断指定第一个TianyuObject对象是否大于第二个对象。",
    "GLOBAL_DTY_TEST_TESTOBJECT_GT_3": "判断指定模板类型的第一个对象是否大于第二个对象。",
    "GLOBAL_DTY_TEST_TESTOBJECT_ISEMPTY": "判断指定字符串是否为空字符串。",
    "GLOBAL_DTY_TEST_TESTOBJECT_ISNOTEMPTY": "判断指定字符串是否不为空字符串。",
    "GLOBAL_DTY_TEST_TESTOBJECT_ISNOTNULL_1": "判断指定对象是否不为空对象。",
    "GLOBAL_DTY_TEST_TESTOBJECT_ISNOTNULL_2": "判断指定TianyuObject对象是否不为空对象。",
    "GLOBAL_DTY_TEST_TESTOBJECT_ISNULL_1": "判断指定对象是否为空对象。",
    "GLOBAL_DTY_TEST_TESTOBJECT_ISNULL_2": "判断指定TianyuObject对象是否为空对象。",
    "GLOBAL_DTY_TEST_TESTOBJECT_LT_1": "判断指定第一个字符串是否小于第二个字符串。",
    "GLOBAL_DTY_TEST_TESTOBJECT_LT_2": "判断指定第一个TianyuObject对象是否小于于第二个对象。",
    "GLOBAL_DTY_TEST_TESTOBJECT_LT_3": "判断指定模板类型的第一个对象是否小于第二个对象。",
    "GLOBAL_DTY_TEST_TESTOBJECT_NE_1": "判断指定的两个字符串是否不相等。",
    "GLOBAL_DTY_TEST_TESTOBJECT_NE_2": "判断指定的两个TianyuObject对象是否不相等。",
    "GLOBAL_DTY_TEST_TESTOBJECT_NE_3": "判断指定的两个模板类型对象是否不相等。",
    "GLOBAL_DTY_TEST_TESTOBJECT_SET": "强制设置当前测试对象的测试结果为失败。",
    "GLOBAL_DTY_TEST_TESTOBJECT_SKIP": "强制设置当前测试对象的测试结果为被跳过。",
    "GLOBAL_DTY_TEST_TESTOBJECT_STRLENGT": "判断指定字符串的长度是否大于指定长度。",
    "GLOBAL_DTY_TEST_TESTOBJECT_STRLENIS": "判断指定字符串长度是否等于指定长度。",
    "GLOBAL_DTY_TEST_TESTOBJECT_STRLENISNOT": "判断指定字符串长度是否不等于指定长度。",
    "GLOBAL_DTY_TEST_TESTOBJECT_STRLENLT": "判断指定字符串的长度是否小于指定长度。",
    "GLOBAL_DTY_TEST_TESTOBJECT_TOBEFALSE": "判断指定布尔值是否为false。",
    "GLOBAL_DTY_TEST_TESTOBJECT_TOBETRUE": "判断指定布尔值是否为true。",
    "GLOBAL_DTY_TEST_TESTOBJECT_UNSET": "强制设置测试对象的测试结果为成功。",
    "GLOBAL_DTY_TEST_TESTSTATE_FAILED": "表示测试状态为失败。",
    "GLOBAL_DTY_TEST_TESTSTATE_SKIPPED": "表示测试状态为被跳过。",
    "GLOBAL_DTY_TEST_TESTSTATE_SUCCESS": "表示测试状态为成功。",
    "GLOBAL_DTY_TEST_TESTTYPE_ASSERT": "表示测试处于阻塞模式；只要存在失败的测试项，该测试项之后的所有测试项都将被跳过。",
    "GLOBAL_DTY_TEST_TESTTYPE_EXPECT": "表示测试处于非阻塞模式；测试项的失败不会对后续的测试项存在影响。",
    "GLOBAL_DTY_TEST_TESTTYPE_SKIPPED": "表示测试或测试项为被跳过。",
    "GLOBAL_DTY_TIANYUOBJECT_EQUALS": "获取一个布尔值，该值指示指定TianyuObject对象是否与当前实例相等。",
    "GLOBAL_DTY_TIANYUOBJECT_GETHASHCODE": "获取一个64位无符号整数，该值等于当前实例的内存哈希值。",
    "GLOBAL_DTY_TIANYUOBJECT_GETTYPEID": "获取一个64位无符号整数，该值等于当前实例的类型标识符（标识符在不同系统平台、不同编译器下的值可能不同）。",
    "GLOBAL_DTY_TIANYUOBJECT_ISNULL": "获取一个布尔值，该值指示当前实例是否为空。（默认情况下，任何实例都应该返回true）",
    "GLOBAL_DTY_TIANYUOBJECT_ISNULLS_STATIC": "获取一个布尔值，该值指示指定对象是否为空。",
    "GLOBAL_DTY_TIANYUOBJECT_OPERATOR_EQ": "比较当前实例与指定对象是否相等。",
    "GLOBAL_DTY_TIANYUOBJECT_TOSTRING": "获取当前TianyuObject实例对应的字符串。",
    "GLOBAL_DTY_TINTEGERBASE_COMPARETO": "比较当前实例与指定TIntegerBase对象的大小。",
    "GLOBAL_DTY_TINTEGERBASE_CONSTRUCTOR_1": "从指定整数类型值创建整数类型对象。",
    "GLOBAL_DTY_TINTEGERBASE_CONSTRUCTOR_2": "从指定的整数类型对象初始化整数类型实例。",
    "GLOBAL_DTY_TINTEGERBASE_EQUALS_1": "获取一个布尔值，该值指示指定TianyuObject对象是否与当前实例相等。",
    "GLOBAL_DTY_TINTEGERBASE_EQUALS_2": "获取一个布尔值指示指定的TIntegerBase类型实例是否与当前对象相等。",
    "GLOBAL_DTY_TINTEGERBASE_GETHASHCODE": "获取一个64位无符号整数，该值等于当前实例的内存哈希值。",
    "GLOBAL_DTY_TINTEGERBASE_GETTYPEID": "获取一个64位无符号整数，该值等于当前实例的类型标识符（标识符在不同系统平台、不同编译器下的值可能不同）。",
    "GLOBAL_DTY_TINTEGERBASE_MAXVALUE": "表示当前整数类型的最大可能值。 此字段为常数。",
    "GLOBAL_DTY_TINTEGERBASE_MINVALUE": "表示当前整数类型的最小可能值。 此字段为常数。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_AAND": "将当前实例与指定整数类型对象按位与并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_ADD": "将当前实例与指定整数类型对象相加并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_ADD_ASS": "将当前实例与指定整数类型对象相加并将当前实例的值设置为相加之后的结果，并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_ANOT": "将当前实例对象按位取反并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_AOR": "将当前实例与指定整数类型对象按位或并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_AOR_ASS": "将当前实例与指定整数类型对象按位或并将当前实例的值设置为计算之后的结果，并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_ASS": "将指定整数类型对象的值赋值给当前实例，并将值以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_AXOR": "将当前实例与指定整数类型对象按位异或并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_AXOR_ASS": "将当前实例与指定整数类型对象按位异或并将当前实例的值设置为计算之后的结果，并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_DIV": "将当前实例与指定整数类型对象相除并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_DIV_ASS": "将当前实例与指定整数类型对象相除并将当前实例的值设置为相除之后的结果，并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_EQ_1": "获取一个布尔值，该值指示指定TianyuObject对象是否与当前实例相等。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_EQ_2": "获取一个布尔值，该值指示指定对象是否与当前实例相等。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_GE": "获取一个布尔值指示当前实例是否大于等于指定对象。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_GT": "获取一个布尔值，该值指示指定当前实例是否大于当前对象。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_LAND_ASS": "将当前实例与指定整数类型对象进行逻辑与运算并将当前实例的值设置为逻辑与之后的结果，并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_LE": "获取一个布尔值，该值指示指定当前实例是否小于等于当前对象。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_LMOVE": "将当前实例左移指定位数并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_LMOVE_ASS": "将当前实例左移指定位数并更新当前对象，并将新的对象值以对应整数类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_LNOT": "获取一个指定值类型，该值指示当前对象实例的逻辑非结果。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_LT": "获取一个布尔值，该值指示指定当前实例是否小于当前对象。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_MOD": "将当前实例与指定整数类型对象相余并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_MOD_ASS": "将当前实例与指定整数类型对象相余并将当前实例的值设置为相余之后的结果，并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_MUL": "将当前实例与指定整数类型对象相乘并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_MUL_ASS": "将当前实例与指定整数类型对象相乘并将当前实例的值设置为相余之后的结果，并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_NE": "比较当前实例是否不等于指定对象。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_RMOVE": "将当前实例右移指定位数并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_RMOVE_ASS": "将当前实例右移指定位数并更新当前对象，并将新的对象值以对应整数类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_SD_1": "将当前实例的值减去1并将结果以对应整数值类型返回。（该操作会更新当前实例的数据）",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_SD_2": "将当前实例的值减去1并更新当前实例的值，将原值以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_SI_1": "将当前实例的值增加1并将结果以对应整数值类型返回。（该操作会更新当前实例的数据）",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_SI_2": "将当前实例的值增加1并更新当前实例的值，将原值以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_SUB": "将当前实例的值减去指定的整数类型对象，并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_SUB_ASS": "将当前实例的值减去指定整数类型对象并将当前实例的值设置为相减之后的结果，并将结果以对应整数值类型返回。",
    "GLOBAL_DTY_TINTEGERBASE_PARSE": "将指定的字符串转换为等价的对应整数类型值。",
    "GLOBAL_DTY_TINTEGERBASE_TB": "将当前整数类型对象隐式转换为对应整数值类型。",
    "GLOBAL_DTY_TINTEGERBASE_TOSTRING_1": "获取一个指定格式的字符串，该字符串等价于当前实例。",
    "GLOBAL_DTY_TINTEGERBASE_TOSTRING_2": "获取一个字符串等价于当前实例。",
    "GLOBAL_DTY_TINTEGERBASE_TRYPARSE_1": "尝试将指定字符串转换为等价的对应整数值类型。",
    "GLOBAL_DTY_TINTEGERBASE_TRYPARSE_2": "尝试将指定字符串转换为等价的整数类型对象。",
    "GLOBAL_DTY_TYPE_CONSTRUCTOR_1": "从指定的类型实例初始化新的类型对象。",
    "GLOBAL_DTY_TYPE_ID": "获取一个64位无符号整数，该值指示当前类型的唯一标识符。",
    "GLOBAL_DTY_TYPE_INSTANCEHASHCODE": "获取一个64位无符号整数，该值指示当前对象的哈希值。",
    "GLOBAL_DTY_TYPE_NAME": "获取一个字符串指示当前类型的全名。",
    "GLOBAL__NUMBERSCALE_ASC": "表示数字编码格式为ASCII码。",
    "GLOBAL__NUMBERSCALE_BIN": "表示数字进位格式为2进制。",
    "GLOBAL__NUMBERSCALE_DEC": "表示数字进位格式为10进制。",
    "GLOBAL__NUMBERSCALE_HEX": "表示数字进位格式为16进制。",
    "GLOBAL__NUMBERSCALE_OCT": "表示数字进位格式为8进制。",

    "": ""
}

{
    "HOME_PAGE_ITEM": "Home",
    "DOWNLOAD_PAGE_ITEM": "Download",
    "DOCUMENT_PAGE_ITEM": "Docs",
    "LANGUAGE_PAGE_ALT": "Languages",

    "CONTACT_US": "Contact Us",
    "EMAIL_TEXT": "E-mail",
    "PHONE_TEXT": "Phone",
    "LOOKING_FORWARD_CONTACT": "Looking Forward to Communicating With You",
    "COPYRIGHT_TEXT": "COPYRIGHT",

    "DIALOG_PAGE_CLOSE_BUTTON": "Close",

    "HOME_PAGE_TIANYU": "/assert/logo/aitianyu.logo.en.gif",
    "HOME_PAGE_DESCRIPTION": "Open source native development library and peripheral tools",
    "HOME_PAGE_SOURCE_EMPTY": "No item found at present~ Please come back later~",
    "HOME_PAGE_MOB_ABOUT_TIANYU": "About Tianyu",

    "ABOUT_TIANYU_FIRST_TITLE": "FIRST",
    "ABOUT_TIANYU_FIRST_P_ONE": "P1",
    "ABOUT_TIANYU_FIRST_P_TWO": "P2",

    "ABOUT_TIANYU_SECOND_TITLE": "SECOND",
    "ABOUT_TIANYU_SECOND_P_ONE": "P1",
    "ABOUT_TIANYU_SECOND_P_TWO": "P2",

    "ABOUT_TIANYU_THIRD_TITLE": "THIRD",
    "ABOUT_TIANYU_THIRD_P_ONE": "P1",
    "ABOUT_TIANYU_THIRD_P_TWO": "P2",

    "404_OPS_MSG": "Ops!",
    "404_DES_MSG": "Something seems to be wrong ~",
    "404_OP1_MSG": "The currently requested data does not exist or is not accessible.",
    "404_OP2_MSG": "You can switch to another page to continue ^_v_^",

    "AITIANYU_DEV_LANGUAGE_TITLE": "Change Language",

    "REQUEST_WAITING_PAGE_POINT": "Waiting...",
    "REQUEST_WAITING_PAGE_AI": "...",
    "REQUEST_WAITING_PAGE_TEXT": "Loading...",
    "REQUEST_WAITING_IS_TIMEOUT": "Data loading timed out. Do you want to wait?",
    "REQUEST_WAITING_TIMEOUT_DIALOG_CONTINUE_WAIT": "Wait",
    "REQUEST_WAITING_TIMEOUT_DIALOG_CANCEL_WAIT": "Cancel",

    "REQUEST_ERROR_PAGE_IMG_ALT": "Re-Try",
    "REQUEST_ERROR_PAGE_TEXT": "Data load failed. Refresh to retry",

    "LANGUAGE_TITLE": "Language",
    "LANGUAGE_SUPPORT_TITLE": "The following languages are supported in Tianyu",
    "LANGUAGE_PENDING_TITLE": "Working",
    "zh_CN": "简体中文",
    "zh_NC": "繁體中文",
    "en_US": "English (United States)",

    "LANGUAGE_PENDING_MOUSE_HOLDER": "The language is being adapted and is not currently supported.",

    "PROJECT_DOWNLOAD_TITLE": "Obtaining project resources",

    "PROJECT_NAME_TIANYU_NATIVE": "Tianyu Development Library C++",
    "PROJECT_NAME_TIANYU_NATIVE_DESC": "The native C++ (Standard 17) development Library without using any other third-party external dependency library.",

    "PROJECT_NAME_TIANYU_TEST_FRAMEWORK": "Tianyu C++ Test Framework",
    "PROJECT_NAME_TIANYU_TEST_FRAMEWORK_DESC": "A small unit testing framework based on \"tianyu C++ native development library\" does not rely on any third party libraries other than the basic C++17 header file.",

    "PROJECT_TITLE_GITHUB_REPO": "Repo",
    "PROJECT_TITLE_GITHUB_CLONE": "Clone",
    "SOURCE": "Source Code",
    "WINDOWS": "Windows",
    "LINUX": "Linux",
    "MACOS": "MacOS",

    "DOWNLOAD_INVALID": "The current project does not provide download resources, please visit Github for more resources.",
    "NO_DOWNLOAD_PROJECT": "There are currently no resources available for download",
    "DOWNLOAD_DIALOG_EMPTY_SEARCH": "Search cannot be NULL!",
    "DOWNLOAD_DIALOG_NOT_SUPPORT_SEARCH": "Search is not currently supported!",

    "TIANYU_DEV_DOCS_PROJECT_OPTIONS": "Document options",
    "TIANYU_DEV_DOCS_PROJECT_NO_OPTIONS": "The current project has no documentation",
    "APIDocs": "API Document",
    "Architecture": "Project Architecture",
    "HelperDocs": "Help",
    "Macrodef": "Macro Define",

    "PROJECT_DOCS_TITLE": "Project documentation",
    "PROJECT_DOCS_API_TITLE": "API Documents",
    "PROJECT_DOCS_ARCH_TITLE": "Project Architecture",
    "PROJECT_DOCS_HELP_TITLE": "Help Documents",
    "PROJECT_DOCS_MACRO_TITLE": "Macro Define",
    "PROJECT_DOCS_API_TIANYU_NATIVE_TITLE": "Tianyu C++ Native Dev Lib - API",

    "TIANYU_DEV_DOCS_MACRO_DEFINE_NO_ITEM": "The current project has no macro definition",
    "TIANYU_DEV_DOCS_MACRO_DEFINE_TITLE": "Macro Definition List",
    "TIANYU_DEV_DOCS_MACRO_DEFINE_ITEM_VALUE_TITLE": " ",
    "TIANYU_DEV_DOCS_MACRO_DEFINE_ITEM_FILE_TITLE": " ",
    "TIANYU_DEV_DOCS_MACRO_DEFINE_ITEM_I18N_TITLE": " ",

    "TIANYU_DEV_DOCS_API": "API Browser",

    "TIANYU_DEV_DOCS_API_NOT_AVAILABLE": "No Project is currently available",
    "TIANYU_DEV_DOCS_API_DATA_LOADING": "Please wait while data is loading...",
    "TIANYU_DEV_DOCS_API_DATA_LOAD_ERROR": "Data loading failed please refresh and try again",
    "TIANYU_DEV_DOCS_API_TITLE": "API Reference",

    "TIANYU_DEV_DOCS_API_TABLE_ITEM_TITLE_NAME": "Name",
    "TIANYU_DEV_DOCS_API_TABLE_ITEM_TITLE_DESC": "Description",

    "TIANYU_DEV_DOCS_API_SOURCE_EMPTY": "The current project has not uploaded THE API document, please wait patiently!",

    "TIANYU_DEV_DOCS_API_PROJECT_NAMESPACE_EMPTY": "No valid namespace was found for the current project",
    "TIANYU_DEV_DOCS_API_PROJECT_DATATYPES_EMPTY": "No defined type was found in the current namespace",
    "TIANYU_DEV_DOCS_API_PROJECT_DATATYPE_EMPTY": "The current type has no custom definition, please query its parent class or interface",

    "TIANYU_DEV_DOCS_API_NAMESPACE_TYPE_CLASS": "Class",
    "TIANYU_DEV_DOCS_API_NAMESPACE_TYPE_ENUM": "Enum",
    "TIANYU_DEV_DOCS_API_NAMESPACE_TYPE_FUNCTION": "Function",
    "TIANYU_DEV_DOCS_API_NAMESPACE_TYPE_DELEGATE": "Function Pointer/Delegate",
    "TIANYU_DEV_DOCS_API_NAMESPACE_TYPE_INTERFACE": "Interface",
    "TIANYU_DEV_DOCS_API_NAMESPACE_TYPE_STRUCT": "Struct",
    "TIANYU_DEV_DOCS_API_NAMESPACE_TYPE_PROPERTY": "Public Variable/Constant Value",
    "TIANYU_DEV_DOCS_API_MACRO_DEF": "Macro Definition",

    "TIANYU_DEV_DOCS_API_DATATYPE_TYPE_CONSTRUCTOR": "Constructor Function",
    "TIANYU_DEV_DOCS_API_DATATYPE_TYPE_OPERATOR": "Operator Override",
    "TIANYU_DEV_DOCS_API_DATATYPE_TYPE_METHOD": "Method",
    "TIANYU_DEV_DOCS_API_DATATYPE_TYPE_PROPERTY": "Property",
    "TIANYU_DEV_DOCS_API_DATATYPE_TYPE_ENUM_VALUE": "Enum Value",

    "TIANYU_DEV_DOCS_API_DATATYPE_MEMBER_DISPLAY_NOTEKEY_NAME": "Name",
    "TIANYU_DEV_DOCS_API_DATATYPE_MEMBER_DISPLAY_NOTEKEY_FILE": "File",
    "TIANYU_DEV_DOCS_API_DATATYPE_MEMBER_DISPLAY_NOTEKEY_DEF": "Def",
    "TIANYU_DEV_DOCS_API_DATATYPE_MEMBER_DISPLAY_NOTEKEY_NOTE": "Note",

    "TIANYU_DEV_DOCS_API_MACRO_DEF_VALUE_NOTEKEY": "Value",

    "tianyu-native": "Tianyu C++ native development library",
    "DTY_PROJECTS_CPP_API_API_NAMESPACE_GLOBAL": "The namespace (global - ::) provides the most basic core type and method definitions.",
    "DTY_PROJECTS_CPP_API_API_NAMESPACE_DTY": "The namespace (base namespace - ::dty) contains the base classes, interfaces, and enumeration types of the Tiyu library.",
    "DTY_PROJECTS_CPP_API_API_NAMESPACE_DTY_COLLECTION": "The namespace (set of data structures - ::dty::collection) contains interfaces and classes that define various collections of objects such as lists, queues, bit arrays, hash tables, and dictionaries.",
    "DTY_PROJECTS_CPP_API_API_NAMESPACE_DTY_EXCEPT": "The namespace (exception type set - ::dty::exception) contains the basic exception type definitions for tianyu libraries.",
    "DTY_PROJECTS_CPP_API_API_NAMESPACE_DTY_I18N": "The namespace (multilingual component set - ::dty::i18n) contains the basic interfaces, types, and methods for multilingual operations.",
    "DTY_PROJECTS_CPP_API_API_NAMESPACE_DTY_TEST": "The namespace (Test core - ::dty::test) contains the tianyu test module's core types, method definitions, and unit testing support for the Tianyu library.",

    "global": "全局",
    "dty": "dty",
    "dty_collection": "dty.collection",
    "dty_except": "dty.except",
    "dty_i18n": "dty.i18n",
    "dty_test": "dty.test",

    "class": "Class",
    "interface": "Interface",
    "function": "Function/Delegate",
    "enum": "Enum",

    "TIANYU_DEV_DOCS_API_MEMBER_DEFINE_TITLE": "Define",
    "TIANYU_DEV_DOCS_API_MEMBER_DEFINE_EXAMPLE": "Example",
    "TIANYU_DEV_DOCS_API_MEMBER_DEFINE_ITEM_FILE": "File:",

    "TIANYU_DEV_DOCS_API_MEMBER_DEFINE_CONSTRUCTOR": "Constructor",
    "TIANYU_DEV_DOCS_API_MEMBER_DEFINE_PROPERTY": "Property",
    "TIANYU_DEV_DOCS_API_MEMBER_DEFINE_OPERATOR": "Operator",
    "TIANYU_DEV_DOCS_API_MEMBER_DEFINE_METHOD": "Method",

    "TIANYU_DEV_DOCS_API_MEMBERS_EMPTY": "No constructor, attribute, operator override, or non-private method found for current type. If this type is a canonical implementation of a template type, refer to the template prototype corresponding to this type.",

    "abstract": "abstract class definition prefix",
    "TEST_MAIN": "Test framework entry main function",
    "_enum": "enumeration type definition",
    "_interface": "interface type",
    "_internal_export": "Internal export interface",
    "__ARRAY__": "Identifies the current value type saved as an array",
    "__BOOLEAN_TYPE_BINARY_LENGTH__": "Boolean type binary number",
    "__BYTE_TYPE_BINARY_LENGTH__": "Binary bits of byte type",
    "__CHAR_TYPE_BINARY_LENGTH__": "Binary bits of character type",
    "__CMODE__": "Indicates that the modified element is compiled in C",
    "__construction__": "Identifies class constructors (including simulated OO)",
    "__CONSTRUCTOR__": "Identifies class constructors (including simulated OO)",
    "__COPYSTRUCTOR__": "Identifies the copy constructor of the class (including emulation OO)",
    "__cp_construct__": "Identifies the copy constructor of the class (including emulation OO)",
    "__DEFAULT__": "Identifies the default implementation of overloaded functions and extended types and data",
    "__destruction__": "Identifies destructors for classes (including simulated OO)",
    "__DESTRUCTOR__": "Identifies destructors for classes (including simulated OO)",
    "__DOUBLE_TYPE_BINARY_LENGTH__": "Double precision real number type binary digit",
    "__DPOINTER__": "Identifies attributes, variables, and parameters saved and passed as second-level Pointers",
    "__DTEST_CORE__": "Indicates the test framework is enabled",
    "__DTY_AIP": "Indicates that the current system is Apple IOS",
    "__DTY_AIS": "Indicates that the current system is Apple platform Iphone emulator",
    "__DTY_AMC": "Indicates that the current system is Apple MacOS",
    "__DTY_APF": "Indicates that the current system is Apple MacOS",
    "__DTY_CORE_MSG_CONVERT": "Bind multilanguage header file for key->i18n text conversion",
    "__DTY_DEEP_LEARNING_MODE__": "Instructs some components in the current project to use learning mode",
    "__DTY_DEV_MODE__": "Indicates whether the current project is in development mode",
    "__DTY_ERR_64": "Development environment error - tianyu library requires 64bit environment",
    "__DTY_LNX": "Indicates that the current system is Linux series",
    "__DTY_SMART_POINTER_COPY_WEAK_MODE__": "Indicates that the smart pointer in the current project uses shallow copy mode for replication construction",
    "__DTY_UNSAFE_MODE__": "Indicates that some components within the current project are using an unsafe memory mode",
    "__DTY_WIN": "Indicates that the current system is Microsoft Windows",
    "__FLOAT_TYPE_BINARY_LENGTH__": "Binary digits of real type",
    "__INOUT__": "Identifies the parameter types of methods and functions that can be input or returned",
    "__INPUT__": "Identifies methods and functions as input arguments",
    "__INSTE__": "Identifies the method as passing an instance of the current operation (for simulated OO in C)",
    "__INT_TYPE_BINARY_LENGTH__": "Integer type binary digit",
    "__LONG_TYPE_BINARY_LENGTH__": "Long integer type binary digits",
    "__OTPUT__": "Identifies method and function arguments as output",
    "__override_cfun": "constant function overload",
    "__override_func": "function overload",
    "__POINTER__": "Identifies attributes, variables, and parameters saved and passed as Pointers",
    "__PREDEFINE__": "Identifies elements such as methods, structs, classes, etc. of undefined entities",
    "__PREREALIZ__": "Identifies the implementation of elements such as methods, structures, classes, etc. defined by __PREDEFINE__",
    "__PRI__": "Indicates that modified functions and attributes are not externally accessible",
    "__PRO__": "Indicates that modified functions and attribute subclasses are accessible",
    "__PTRREFER__": "Identifies attributes, variables, and parameters saved and passed as pointer references",
    "__PTR_TO_REF__": "Identifies conversion from pointer type to reference type",
    "__PTR_TO_VAR__": "Identifies conversion from pointer type to value type",
    "__PUB__": "Indicates that modified functions and attributes are externally accessible",
    "__pure_const_fn": "pure virtual constant suffix",
    "__pure_virtual_fun": "pure virtual suffix",
    "__REFERENCE__": "Identifies attributes, variables, and parameters saved and passed by reference type",
    "__REF_TO_PTR__": "Identifies conversion from reference type to pointer type",
    "__REF_TO_VAR__": "Identifies conversion from reference type to value type",
    "__SHORT_TYPE_BINARY_LENGTH__": "Short integer type binary digit",
    "__SIGNED_CHAR_MAX__": "Maximum number of characters with signs",
    "__SIGNED_CHAR_MIN__": "Minimum number of characters with signs",
    "__SIGNED_INT16_MAX__": "Maximum signed number of 16-bit integer types",
    "__SIGNED_INT16_MIN__": "Minimum signed number of 16-bit integer types",
    "__SIGNED_INT32_MAX__": "Maximum signed number of 32-bit integer types",
    "__SIGNED_INT32_MIN__": "Minimum signed number of 32-bit integer types",
    "__SIGNED_INT64_MAX__": "Maximum number of signed 64-bit integer types",
    "__SIGNED_INT64_MIN__": "Minimum number of signed 64-bit integer types",
    "__SIGNED_INT8_MAX__": "Maximum number of signed 8-bit integer types",
    "__SIGNED_INT8_MIN__": "Minimum number of signed 8-bit integer types",

    "__UNSIGNED_CHAR_MAX__": "Maximum unsigned number of characters types",
    "__UNSIGNED_CHAR_MIN__": "Minimum unsigned number of characters types",
    "__UNSIGNED_INT16_MAX__": "Maximum unsigned number of 16-bit integer types",
    "__UNSIGNED_INT16_MIN__": "Minimum unsigned number of 16-bit integer types",
    "__UNSIGNED_INT32_MAX__": "Maximum unsigned number of 32-bit integer types",
    "__UNSIGNED_INT32_MIN__": "Minimum unsigned number of 32-bit integer types",
    "__UNSIGNED_INT64_MAX__": "Maximum number of unsigned 64-bit integer types",
    "__UNSIGNED_INT64_MIN__": "Minimum number of unsigned 64-bit integer types",
    "__UNSIGNED_INT8_MAX__": "Maximum number of unsigned 8-bit integer types",
    "__UNSIGNED_INT8_MIN__": "Minimum number of unsigned 8-bit integer types",
    "__VARIABLE__": "Identifies attributes, variables, and arguments saved and passed as value types",
    "__VAR_TO_PTR__": "Identifies conversion from value type to pointer type",
    "__VAR_TO_REF__": "Identifies conversion from value type to reference type",

    "GLOBAL_DTY_BOOLEAN": "Represents a Boolean (true or false) value.",
    "GLOBAL_DTY_BOOL_PTR": "Represents a Boolean pointer (which is a smart pointer and provides memory security).",
    "GLOBAL_DTY_BYTE": "Indicates an 8-bit unsigned integer.",
    "GLOBAL_DTY_BYTE_PTR": "Represents an 8-bit unsigned integer pointer (which is a smart pointer and provides memory security).",
    "GLOBAL_DTY_CHAR": "Indicates a signed character.",
    "GLOBAL_DTY_COLLECTION_COMPARERESULT": "Indicates the size of two objects after comparison.",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT": "Indicates the result set calculated by the Filter method of Iterator.",
    "GLOBAL_DTY_COLLECTION_ICOLLECTIONS": "Define the sizes, enumerators of all generic collections.",
    "GLOBAL_DTY_COLLECTION_ICOMPAREABLE": "Provides a method to compare two objects.",
    "GLOBAL_DTY_COLLECTION_IEQUATABLE": "Defines a generic method implemented by a value type or class to provide equality judgment between object instances.",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY": "Enumerator instance interface that provides memory-safe enumeration data to the enumerator.",
    "GLOBAL_DTY_COLLECTION_ITERATOR": "An enumerator object that cannot be subclassed. It is initialized by another enumerator or enumerator instance and provides methods for traversing, filtering, and finding data sets.",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY": "Enumerator instance, which cannot be derived from other subclasses. It provides a generic enumerator instance template that provides the functions of an enumerator. (Passing as an object may raise memory safety issues, so if possible, the enumerator instance initializes the enumerator object for passing.) ",
    "GLOBAL_DTY_DOUBLE": "represents a double real number.",
    "GLOBAL_DTY_DOUBLE_PTR": "Represents a double real pointer (which is a smart pointer and provides memory security).",
    "GLOBAL_DTY_EVENTARGS": "Represents the base class of the class containing event data and provides values for events that do not contain event data.",
    "GLOBAL_DTY_EVENTHANDLER": "Represents the public method that will be used to handle events. The default event type is the EventArgs base class that does not contain event data.",
    "GLOBAL_DTY_EVENTHANDLERITEM": "Represents an event handler. The default event type is EventArgs base class without event data ",
    "GLOBAL_DTY_EXCEPT_ARGUMENTEXCEPTION": "An exception thrown when one of the arguments supplied to a method is invalid.",
    "GLOBAL_DTY_EXCEPT_ARGUMENTNULLEXCEPTION": "An exception thrown when a NULL reference is passed to a method that does not accept it as a valid argument.",
    "GLOBAL_DTY_EXCEPT_ARGUMENTOUTOFRANGEEXCEPTION": "when the independent variable values beyond the invoked method defining the range of allowable values caused by abnormal.",
    "GLOBAL_DTY_EXCEPT_ARITHMETICEXCEPTION": "An exception thrown when an arithmetic, cast, or conversion operation has gone wrong.",
    "GLOBAL_DTY_EXCEPT_EXCEPTION": "Indicates an error that occurs during application execution. (this class is the base class for all exception types) ",
    "GLOBAL_DTY_EXCEPT_INDEXOUTOFRANGEEXCEPTION": "Exception thrown when attempting to access elements of an array or collection whose index is out of bounds.",
    "GLOBAL_DTY_EXCEPT_NOTIMPLEMENTATIONEXCEPTION": "when unable to achieve the request method or operation caused by abnormal.",
    "GLOBAL_DTY_EXCEPT_NULLPOINTEREXCEPTION": "Exception raised when attempting to reference an empty object pointer.",
    "GLOBAL_DTY_EXCEPT_OPERATIONFAILEDEXCEPTION": "Exception thrown when the requested operation fails ",
    "GLOBAL_DTY_EXCEPT_OPERATIONNOTSUPPORTEXCEPTION": "when the requested operation is not supported the exception",
    "GLOBAL_DTY_EXCEPT_PARSEEXCEPTION": "Exception raised when attempting to convert unsupported data ",
    "GLOBAL_DTY_EXCEPT_PARSESTRINGEMPTYEXCEPTION": "attempts to convert an empty string caused by the abnormal",
    "GLOBAL_DTY_FLOAT": "Represents a real number type.",
    "GLOBAL_DTY_FLOAT_PTR": "Indicates a pointer of real type (the pointer is intelligent and provides memory security protection).",
    "GLOBAL_DTY_FORMATHELPER": "Data formatting assistant that provides basic data types, an IToString interface, and other common data formatting methods.",
    "GLOBAL_DTY_GETTYPE_1": "Gets the type declaration and information of the specified type.",
    "GLOBAL_DTY_GETTYPE_2": "Gets the type declaration and object hash of the specified type.",
    "GLOBAL_DTY_I18N_LANGUAGEAREA": "Provides the codes of all countries and regions.",
    "GLOBAL_DTY_IFORMATTER": "Provides a function to format the value of an object as a string representation.",
    "GLOBAL_DTY_INT16": "Indicates a 16-bit signed integer.",
    "GLOBAL_DTY_INT32": "Indicates a 32-bit signed integer.",
    "GLOBAL_DTY_INT64": "Indicates a 64-bit signed integer.",
    "GLOBAL_DTY_INT_PTR": "Represents a 32-bit signed integer pointer (which is a smart pointer and provides memory security).",
    "GLOBAL_DTY_IOBJECTCONVERTER": "Provides a method for converting a type from a byte array to an object instance.",
    "GLOBAL_DTY_IPROPERTY": "Property type interface for obtaining and setting properties.",
    "GLOBAL_DTY_IPROPERTYGETTER": "Property getter that provides methods for obtaining properties.",
    "GLOBAL_DTY_IPROPERTYSETTER": "Property setter that provides methods for setting properties.",
    "GLOBAL_DTY_ISTRINGCONVERTER": "Provides a method for converting a type from a byte array to a string.",
    "GLOBAL_DTY_ITOSTRING": "Provides methods for converting a type to a string.",
    "GLOBAL_DTY_KEYVALUEPAIR": "Defines key/value pairs that can be set or retrieved.",
    "GLOBAL_DTY_LONG": "Indicates a 64-bit signed integer.",
    "GLOBAL_DTY_LONG_PTR": "Represents a 64-bit signed integer pointer (which is a smart pointer and provides memory security).",
    "GLOBAL_DTY_LPROPERTY": "A non-value type property that provides a way to manipulate set or read data using Lambda expressions.",
    "GLOBAL_DTY_PARSEHELPER": "A data parsing assistant that provides methods for converting strings to corresponding data values for basic data types.",
    "GLOBAL_DTY_PLATFORMID": "Identifies each platform in cross-platform mode.",
    "GLOBAL_DTY_PROPERTY": "Value type property that provides a setting or reader for the specified data type.",
    "GLOBAL_DTY_SBYTE": "Indicates an 8-bit signed integer.",
    "GLOBAL_DTY_SHORT": "Indicates a 16-bit signed integer.",
    "GLOBAL_DTY_SHORT_PTR": "Indicates a 16-bit signed integer pointer (which is a smart pointer and provides memory security).",
    "GLOBAL_DTY_SMARTPOINTER": "Used to provide secure pointer manipulation methods for data types and memory leak protection. (It is not recommended to use this pointer for weak pointer references in multithreading.)",
    "GLOBAL_DTY_STRCMP": "Used to compare the size of two strings.",
    "GLOBAL_DTY_STRING_SP": "Smart pointer to strings.",
    "GLOBAL_DTY_STRLEN": "Used to get the length of the specified string.",
    "GLOBAL_DTY_TEST_FLOWDELEGATE": "Represents the flow test function delegate of tianyu test component.",
    "GLOBAL_DTY_TEST_TD": "TestDelegate for TestDelegate.",
    "GLOBAL_DTY_TEST_TE": "Indicates the tianyu test component instance, short for TestEntity.",
    "GLOBAL_DTY_TEST_TESTDELEGATE": "Represents the function delegate of the test set (spec) of the Tianyu test component.",
    "GLOBAL_DTY_TEST_TESTENTITY": "Indicates the tianyu test component instance.",
    "GLOBAL_DTY_TEST_TESTFLOW": "Indicates the flow test set of tianyu test components.",
    "GLOBAL_DTY_TEST_TESTOBJECT": "Indicates the test object of tianyu test component and provides a method to determine the data.",
    "GLOBAL_DTY_TEST_TESTSPECDELEGATE": "Represents the function delegate of the test set (spec) of the Tianyu test component.",
    "GLOBAL_DTY_TEST_TESTSTATE": "Indicates the test status, including failure, success, and skip.",
    "GLOBAL_DTY_TEST_TESTTYPE": "Indicates the test type, including skipped, non-blocking, and blocking tests.",
    "GLOBAL_DTY_TEST_TF": "Indicates the flow test set of tianyu test component, short for TestFlow.",
    "GLOBAL_DTY_TEST_TFD": "FlowDelegate for tianyutest component.",
    "GLOBAL_DTY_TEST_TO": "indicates the TestObject of tianyu test component and provides the method of determining data. It is short for TestObject.",
    "GLOBAL_DTY_TEST_TS": "indicates the TestState, including failure, success, and skip. It is short for TestState.",
    "GLOBAL_DTY_TEST_TSD": "TestSpecDelegate for TestSpecDelegate.",
    "GLOBAL_DTY_TEST_TT": "indicates the TestType, including skip, non-blocking, and blocking tests. It is short for TestType.",
    "GLOBAL_DTY_TIANYUOBJECT": "Supports all classes in the class hierarchy defined by the Tianyu Native library and provides low-level services for derived classes. This is the final base class of all Tianyu Native classes; It is the root of the type hierarchy.",
    "GLOBAL_DTY_TINTEGERBASE": "The base class of the integer type, used to provide comparison and calculation conversion methods for all integer types.",
    "GLOBAL_DTY_TYPE": "Represents the type declaration, type identifier, and object hash value (if any).",
    "GLOBAL_DTY_UCHAR": "Indicates an unsigned character.",
    "GLOBAL_DTY_UINT16": "Indicates a 16-bit unsigned integer.",
    "GLOBAL_DTY_UINT32": "Indicates a 32-bit unsigned integer.",
    "GLOBAL_DTY_UINT64": "Indicates a 64-bit unsigned integer.",
    "GLOBAL_DTY_ULONG": "Indicates a 64-bit unsigned integer.",
    "GLOBAL_DTY_USHORT": "Indicates a 16-bit unsigned integer.",
    "GLOBAL_DTY_VALUEALIGN": "Used to convert the specified value to a new value that is the smallest value greater than or equal to the specified value in the specified base.",
    "GLOBAL_DTY_VALUEALIGNBYPOW": "Used to convert a specified value to a new value that is the smallest value greater than or equal to the specified value based on the specified exponential power of 2.",
    "GLOBAL_DTY__DTY_NATIVE_CPP_DEFAULT_TO_STRING": "Used to get the full type name of the specified object.",
    "GLOBAL__B2STR": "Used to convert bytes to strings.",
    "GLOBAL__B2STR_F": "Used to convert bytes to a string of the specified format.",
    "GLOBAL__C2STR": "Used to convert character types to strings.",
    "GLOBAL__C2STR_F": "Used to convert a character type to a string of the specified format.",
    "GLOBAL__D2STR": "Used to convert a double real number to a string.",
    "GLOBAL__D2STR_F": "Used to convert a double real number to a string of the specified format.",
    "GLOBAL__F2STR": "Used to convert real numbers to strings.",
    "GLOBAL__F2STR_F": "Used to convert a real number to a string of the specified format.",
    "GLOBAL__I2STR": "Used to convert a 32-bit integer to a string.",
    "GLOBAL__I2STR_F": "Used to convert a 32-bit integer to a string of the specified format.",
    "GLOBAL__L2STR": "Used to convert a long 64-bit integer to a string.",
    "GLOBAL__L2STR_F": "Used to convert a 64-bit long integer to a string of the specified format.",
    "GLOBAL__NUMBERSCALE": "Represents a number formatted carry system.",
    "GLOBAL__S2STR": "Used to convert 16-bit short integers to strings.",
    "GLOBAL__S2STR_F": "Used to convert a 16-bit short integer to a string of the specified format.",
    "GLOBAL__SB2STR": "Used to convert signed bytes to strings.",
    "GLOBAL__SB2STR_F": "Used to convert signed bytes to a string of the specified format.",
    "GLOBAL__UC2STR": "Used to convert unsigned character types to strings.",
    "GLOBAL__UC2STR_F": "Used to convert an unsigned character type to a string of the specified format.",
    "GLOBAL__UI2STR": "Used to convert unsigned 32-bit integers to strings.",
    "GLOBAL__UI2STR_F": "Used to convert an unsigned 32-bit integer to a string of the specified format.",
    "GLOBAL__UL2STR": "Used to convert an unsigned 64-bit long integer to a string.",
    "GLOBAL__UL2STR_F": "Used to convert a 64-bit unsigned long integer to a string of the specified format.",
    "GLOBAL__US2STR": "Used to convert unsigned 16-bit short integers to strings.",
    "GLOBAL__US2STR_F": "Used to convert an unsigned 16-bit short integer to a string of the specified format.",

    "GLOBAL_DTY_BOOLEAN_BOOL": "Implicitly converts the current Boolean object to a Boolean value type.",
    "GLOBAL_DTY_BOOLEAN_CONSTRUCTOR_1": "Creates a Boolean object from the specified Boolean value.",
    "GLOBAL_DTY_BOOLEAN_CONSTRUCTOR_2": "Creates a new Instance of a Boolean type from the specified Boolean object.",
    "GLOBAL_DTY_BOOLEAN_EQUALS_1": "Gets a Boolean value indicating whether the specified TianyuObject instance is equal to the current object.",
    "GLOBAL_DTY_BOOLEAN_EQUALS_2": "Gets a Boolean value indicating whether the specified Instance of a Boolean type is equal to the current object.",
    "GLOBAL_DTY_BOOLEAN_GETHASHCODE": "Gets a 64-bit unsigned integer equal to the memory hash value of the current instance.",
    "GLOBAL_DTY_BOOLEAN_GETTYPEID": "Gets a 64-bit unsigned integer equal to the type identifier of the current instance (the value of the identifier may vary from system platform to compiler).",
    "GLOBAL_DTY_BOOLEAN_INT32": "Converts the current Boolean object implicitly to an equivalent 32-bit integer.",
    "GLOBAL_DTY_BOOLEAN_MAXVALUE": "Gets a value that is the maximum value of a Boolean type.",
    "GLOBAL_DTY_BOOLEAN_MINVALUE": "Gets a value that is the minimum value of a Boolean type.",
    "GLOBAL_DTY_BOOLEAN_OPERATOR_ASS": "The '=' operator override assigns the specified Boolean object value to the current object and returns the equivalent Boolean value.",
    "GLOBAL_DTY_BOOLEAN_OPERATOR_EQ_1": "Compares whether an object of type TianyuObject is equal to the current Instance of type Boolean.",
    "GLOBAL_DTY_BOOLEAN_OPERATOR_EQ_2": "Compares whether the specified Instance of a Boolean type is equal to the current object.",
    "GLOBAL_DTY_BOOLEAN_OPERATOR_LAND": "Computes the logical 'and' operational values of the current object and instances of the specified Boolean type.",
    "GLOBAL_DTY_BOOLEAN_OPERATOR_LNOT": "Computes the logical 'not' operation value of the current object.",
    "GLOBAL_DTY_BOOLEAN_OPERATOR_LOR": "Computes the logical 'or' operational values of the current object and instances of the specified Boolean type.",
    "GLOBAL_DTY_BOOLEAN_OPERATOR_NE": "Compares whether the specified instance of a Boolean type is not equal to the current object.",
    "GLOBAL_DTY_BOOLEAN_PARSE": "Converts the specified string to an equivalent Boolean value.",
    "GLOBAL_DTY_BOOLEAN_TOSTRING_1": "Converts the current Boolean object to a string of the specified format.",
    "GLOBAL_DTY_BOOLEAN_TOSTRING_2": "Converts the current Boolean object to an equivalent default format string.",
    "GLOBAL_DTY_BOOLEAN_TRYPARSE_1": "Attempts to convert the specified string to an equivalent Boolean value.",
    "GLOBAL_DTY_BOOLEAN_TRYPARSE_2": "Attempts to convert the specified string to an equivalent Boolean object.",
    "GLOBAL_DTY_COLLECTION_COMPARERESULT_EQUAL": "Indicates that the comparison results are equal.",
    "GLOBAL_DTY_COLLECTION_COMPARERESULT_GREAT": "Indicates that the comparison result is greater than.",
    "GLOBAL_DTY_COLLECTION_COMPARERESULT_LESS": "Indicates that the comparison result is less than.",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_GETHASHCODE": "Gets a 64-bit unsigned integer equal to the memory hash value of the current instance.",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_CONSTRUCTOR_1": "Creates a FilterResult object from the specified pointer (the number of elements corresponding to the pointer), specifying whether or not the pointer memory is freed when the object is destroyed.",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_CONSTRUCTOR_2": "Creates a FilterResult object from the specified pointer (the total number of elements that the pointer traverses the element book and the pointer), specifying whether or not the pointer memory is freed when the object is destroyed.",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_CONSTRUCTOR_3": "Creates a new FilterResult object from the specified FilterResult object.",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_GETTYPEID": "Gets a 64-bit unsigned integer equal to the type identifier of the current instance (the value of the identifier may vary from system platform to compiler).",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_ISEMPTY": "Gets a Boolean value indicating whether elements inside the current FilterResult instance are empty.",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_ISNULL": "Gets a Boolean value indicating whether elements inside the current FilterResult instance are invalid.",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_LENGTH": "Gets the valid element length of the current FilterResult instance.",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_OPERATOR_INDEX": "Indexer - Gets an object reference to the specified index value.",
    "GLOBAL_DTY_COLLECTION_FILTERRESULT_TOSTRING": "Gets the string corresponding to the current FilterResult instance.",
    "GLOBAL_DTY_COLLECTION_ICOLLECTIONS_CONSTRUCTOR": "Initialize ICollections from the specified property reader.",
    "GLOBAL_DTY_COLLECTION_ICOLLECTIONS_GETITERATOR": "Gets an enumerator object equivalent to an enumeration of collection elements.",
    "GLOBAL_DTY_COLLECTION_ICOMPAREABLE_COMPARETO": "Gets a value indicating the size relationship between the current instance and the specified object.",
    "GLOBAL_DTY_COLLECTION_ICOMPAREABLE_OPERATOR_EQ": "Compares whether the current instance is equal to the specified object.",
    "GLOBAL_DTY_COLLECTION_ICOMPAREABLE_OPERATOR_GE": "Gets a Boolean value indicating whether the current instance is greater than or equal to the specified object.",
    "GLOBAL_DTY_COLLECTION_ICOMPAREABLE_OPERATOR_GT": "Gets a Boolean value indicating whether the current instance is larger than the specified object.",
    "GLOBAL_DTY_COLLECTION_ICOMPAREABLE_OPERATOR_LE": "Gets a Boolean value indicating whether the current instance is less than or equal to the specified object.",
    "GLOBAL_DTY_COLLECTION_ICOMPAREABLE_OPERATOR_LT": "Gets a Boolean value indicating whether the current instance is smaller than the specified object.",
    "GLOBAL_DTY_COLLECTION_ICOMPAREABLE_OPERATOR_NE": "Compares whether the current instance is unequal to the specified object.",
    "GLOBAL_DTY_COLLECTION_IEQUATABLE_EQUALS": "Gets a Boolean value indicating whether the specified object is equal to the current instance.",
    "GLOBAL_DTY_COLLECTION_IEQUATABLE_OPERATOR_EQ": "Compares whether the current instance is equal to the specified object.",
    "GLOBAL_DTY_COLLECTION_IEQUATABLE_OPERATOR_NE": "Compares whether the current instance is unequal to the specified object.",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_END": "Gets a pointer to the last element of an enumeration instance.",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_FILTER": "Filter the matching elements from the current enumeration instance and return a FilterResult object consisting of those elements.",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_FIND": "Gets a matching element from the current enumeration instance.",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_FINDINDEX": "Gets a matching element index value from the current enumeration instance.",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_FOREACH": "Each element in the current enumeration instance is iterated over and the corresponding function delegate is performed for each element.",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_GET": "Gets the element of the specified index from the current enumeration instance.",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_GETHASHCODE": "Gets a 64-bit unsigned integer equal to the memory hash value of the current instance.",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_CONSTRUCTOR_1": "Initializes the enumerator instance interface from the specified element set length.",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_CONSTRUCTOR_2": "Initializes the new enumerator instance interface from the specified enumerator interface instance.",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_GETTYPEID": "Gets a 64-bit unsigned integer equal to the type identifier of the current instance (the value of the identifier may vary from system platform to compiler).",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_NEVER": "Filters unmatched elements from the current enumeration instance and returns a FilterResult object consisting of those elements.",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_SIZE": "Gets the number of elements of the current enumerator instance.",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_SOME": "Gets an unmatched element from the current enumeration instance.",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY_TOSTRING": "Gets the string corresponding to the current IIteratorEntity instance.",
    "GLOBAL_DTY_COLLECTION_IITERATORENTITY__SIZE": "Gets a property that gets or sets the number of elements for the current strength.",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_END": "Gets a pointer to the last element of an enumeration instance.",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_FILTER": "Filter the matching elements from the current enumeration instance and return a FilterResult object consisting of those elements.",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_FIND": "Gets a matching element from the current enumeration instance.",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_FINDINDEX": "Gets a matching element index value from the current enumeration instance.",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_FOREACH": "Each element in the current enumeration instance is iterated over and the corresponding function delegate is performed for each element.",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_GET": "Gets the element of the specified index from the current enumeration instance.",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_GETHASHCODE": "Gets a 64-bit unsigned integer equal to the memory hash value of the current instance.",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_CONSTRUCTOR_1": "Creates an enumerator instance with the specified pointer and the corresponding element length (you can set whether to free pointer memory when the object is destroyed).",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_CONSTRUCTOR_2": "Creates a new enumerator instance object from the specified enumerator instance.",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_GETTYPEID": "Gets a 64-bit unsigned integer equal to the type identifier of the current instance (the value of the identifier may vary from system platform to compiler).",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_NEVER": "Filters unmatched elements from the current enumeration instance and returns a FilterResult object consisting of those elements.",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_SOME": "Gets an unmatched element from the current enumeration instance.",
    "GLOBAL_DTY_COLLECTION_ITERATORENTITY_TOSTRING": "Gets the string corresponding to the current IteratorEntity instance.",
    "GLOBAL_DTY_COLLECTION_ITERATOR_CURRENT": "Gets the pointer to the element to which the enumerator is currently pointing.",
    "GLOBAL_DTY_COLLECTION_ITERATOR_END": "Gets a pointer to the last element of an enumeration instance.",
    "GLOBAL_DTY_COLLECTION_ITERATOR_FILTER": "Filter the matching elements from the current enumeration instance and return a FilterResult object consisting of those elements.",
    "GLOBAL_DTY_COLLECTION_ITERATOR_FIND": "Gets a matching element from the current enumeration instance.",
    "GLOBAL_DTY_COLLECTION_ITERATOR_FINDINDEX": "Gets a matching element index value from the current enumeration instance.",
    "GLOBAL_DTY_COLLECTION_ITERATOR_FOREACH": "Each element in the current enumeration instance is iterated over and the corresponding function delegate is performed for each element.",
    "GLOBAL_DTY_COLLECTION_ITERATOR_GETHASHCODE": "Gets a 64-bit unsigned integer equal to the memory hash value of the current instance.",
    "GLOBAL_DTY_COLLECTION_ITERATOR_CONSTRUCTOR_1": "Creates an enumerator instance from the specified enumerator instance.",
    "GLOBAL_DTY_COLLECTION_ITERATOR_CONSTRUCTOR_2": "Creates a new enumerator instance from the specified enumerator object.",
    "GLOBAL_DTY_COLLECTION_ITERATOR_GETTYPEID": "Gets a 64-bit unsigned integer equal to the type identifier of the current instance (the value of the identifier may vary from system platform to compiler).",
    "GLOBAL_DTY_COLLECTION_ITERATOR_NEVER": "Filters unmatched elements from the current enumeration instance and returns a FilterResult object consisting of those elements.",
    "GLOBAL_DTY_COLLECTION_ITERATOR_NEXT": "Points the index to the next element and returns the pointer to the element currently pointed to by the current enumerator.",
    "GLOBAL_DTY_COLLECTION_ITERATOR_RESET": "Resets the enumerator element to point to the first element.",
    "GLOBAL_DTY_COLLECTION_ITERATOR_SIZE": "Gets the number of elements of the current enumerator instance.",
    "GLOBAL_DTY_COLLECTION_ITERATOR_SOME": "Gets an unmatched element from the current enumeration instance.",
    "GLOBAL_DTY_COLLECTION_ITERATOR_TOSTRING": "Gets the string corresponding to the current Iterator instance.",
    "GLOBAL_DTY_DOUBLE_COMPARETO": "Compares the size of the current double real number with the specified double real number. (The size of the real numbers depends on the precision Settings)",
    "GLOBAL_DTY_DOUBLE_CONSTRUCTOR_1": "Creates a double real object from the specified double real value.",
    "GLOBAL_DTY_DOUBLE_CONSTRUCTOR_2": "Creates a double real object from the specified double real value and sets the comparison precision.",
    "GLOBAL_DTY_DOUBLE_CONSTRUCTOR_3": "Creates a new double real object from the specified double real instance.",
    "GLOBAL_DTY_DOUBLE_DOUBLE": "Converts the current double-precision real number object implicitly to its equivalent double-precision real value.",
    "GLOBAL_DTY_DOUBLE_EPSILON": "Represents the smallest positive Double greater than zero. This field is a constant.",
    "GLOBAL_DTY_DOUBLE_EQUALS_1": "Gets a Boolean value indicating whether the specified TianyuObject is equal to the current instance.",
    "GLOBAL_DTY_DOUBLE_EQUALS_2": "Gets a Boolean value indicating whether the specified double real object is equal to the current instance.",
    "GLOBAL_DTY_DOUBLE_GETHASHCODE": "Gets a 64-bit unsigned integer equal to the memory hash value of the current instance.",
    "GLOBAL_DTY_DOUBLE_GETTYPEID": "Gets a 64-bit unsigned integer equal to the type identifier of the current instance (the value of the identifier may vary from system platform to compiler).",
    "GLOBAL_DTY_DOUBLE_MAXVALUE": "Represents the highest possible value for Double. This field is a constant.",
    "GLOBAL_DTY_DOUBLE_MINVALUE": "Represents the lowest possible value for Double. This field is a constant.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_ADD": "Adds the current instance to the specified Double object and returns the result as a Double value.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_ADD_ASS": "Adds the current instance to the specified Double object and sets the value of the current instance to the result of the addition and returns the result as a Double value.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_ASS": "Assigns the value of the specified Double object to the current instance and returns the value as a Double value.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_DIV": "Divides the current instance from the specified Double and returns the result as a Double value.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_DIV_ASS": "Divides the current instance from the specified Double and sets the value of the current instance to the sum, and returns the result as a Double value.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_EQ_1": "Gets a Boolean value indicating whether the specified TianyuObject is equal to the current instance.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_EQ_2": "Gets a Boolean value indicating whether the specified object is equal to the current instance.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_GE": "Gets a Boolean value indicating whether the specified current instance is greater than or equal to the current object.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_GT": "Gets a Boolean value indicating whether the specified current instance is larger than the current object.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_LE": "Gets a Boolean value indicating whether the specified current instance is less than or equal to the current object.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_LT": "Gets a Boolean value indicating whether the specified current instance is smaller than the current object.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_MUL": "Multiplies the current instance with the specified Double object and returns the result as a Double value.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_MUL_ASS": "Multiplies the current instance and the specified Double object and sets the value of the current instance to the result of the addition, and returns the result as a Double value.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_NE": "Gets a Boolean value indicating whether the specified object is not equal to the current instance.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_SD_1": "Subtract 1.0 from the current instance value and return the result as a double value. (This operation updates data for the current instance)",
    "GLOBAL_DTY_DOUBLE_OPERATOR_SD_2": "Subtract 1.0 from the current instance value and update the current instance value, returning the original value as a double value.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_SI_1": "Increments the value of the current instance by 1.0 and returns the result as a double. (This operation updates data for the current instance)",
    "GLOBAL_DTY_DOUBLE_OPERATOR_SI_2": "Increments the value of the current instance by 1.0 and updates the value of the current instance, returning the original value as a double.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_SUB": "Subtracts the value of the current instance from the specified Double and returns the result as a Double value.",
    "GLOBAL_DTY_DOUBLE_OPERATOR_SUB_ASS": "Subtract the value of the current instance from the specified Double object and set the value of the current instance to the sum and return the result as a Double value.",
    "GLOBAL_DTY_DOUBLE_PARSE": "Converts the specified string to its equivalent double.",
    "GLOBAL_DTY_DOUBLE_PRECISION": "Represents the reliable precision of the current Double object.",
    "GLOBAL_DTY_DOUBLE_TOSTRING_1": "Gets a string of the specified format equivalent to the current instance.",
    "GLOBAL_DTY_DOUBLE_TOSTRING_2": "Get a string equivalent to the current instance.",
    "GLOBAL_DTY_DOUBLE_TRYPARSE_1": "Attempts to convert the specified string to the equivalent double value type.",
    "GLOBAL_DTY_DOUBLE_TRYPARSE_2": "Attempts to convert the specified string to its equivalent object of type Double.",
    "GLOBAL_DTY_EVENTARGS_EMPTY": "Represents an empty object that contains no event data by default.",
    "GLOBAL_DTY_EVENTARGS_GETHASHCODE": "Gets a 64-bit unsigned integer equal to the memory hash value of the current instance.",
    "GLOBAL_DTY_EVENTARGS_GETTYPEID": "Gets a 64-bit unsigned integer equal to the type identifier of the current instance (the value of the identifier may vary from system platform to compiler).",
    "GLOBAL_DTY_EVENTARGS_TOSTRING": "Gets the string corresponding to the current EventArgs instance.",
    "GLOBAL_DTY_EVENTHANDLERITEM_HANDLER": "A handler delegate that represents the current event handler item.",
    "GLOBAL_DTY_EVENTHANDLERITEM_ID": "An identifier that represents the current event handler.",
    "GLOBAL_DTY_EVENTHANDLERITEM_NEXT": "Represents the next event processing item. (NULL indicates that the current processing item is the last one)",
    "GLOBAL_DTY_EVENTHANDLER_ADDHANDLER": "Adds a new handler item to the current event handler object.",
    "GLOBAL_DTY_EVENTHANDLER_CLEAR": "Clears all processing items in the current event handler.",
    "GLOBAL_DTY_EVENTHANDLER_COUNT": "Represents the number of processing items in the current event handling object.",
    "GLOBAL_DTY_EVENTHANDLER_GETHASHCODE": "Gets a 64-bit unsigned integer equal to the memory hash value of the current instance.",
    "GLOBAL_DTY_EVENTHANDLER_GETTYPEID": "Gets a 64-bit unsigned integer equal to the type identifier of the current instance (the value of the identifier may vary from system platform to compiler).",
    "GLOBAL_DTY_EVENTHANDLER_INVOKE": "Triggers an event processing.",
    "GLOBAL_DTY_EVENTHANDLER_REMOVEHANDLER": "Removes the specified event item from the current event handler.",
    "GLOBAL_DTY_EVENTHANDLER_TOSTRING": "Gets the string corresponding to the current EventHandler instance.",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_COMPARETO": "Compares the size of the current instance with the specified Exception object.",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_EQUALS": "Determines whether the current instance is equal to the specified object.",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_GETEXCEPTIONID": "Gets an unsigned long integer of 64 indicating the Exception identifier of the current Exception type.",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_GETTYPEID": "Gets a 64-bit unsigned integer equal to the type identifier of the current instance (the value of the identifier may vary from system platform to compiler).",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_OPERATOR_EQ": "Compares whether the current instance is equal to the specified object.",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_OPERATOR_GE": "Gets a Boolean value indicating whether the specified current instance is greater than or equal to the current object.",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_OPERATOR_GT": "Gets a Boolean value indicating whether the specified current instance is larger than the current object.",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_OPERATOR_LE": "Gets a Boolean value indicating whether the current instance is less than or equal to the specified object.",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_OPERATOR_LT": "Gets a Boolean value indicating whether the current instance is smaller than the specified object.",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_OPERATOR_NE": "Compares whether the current instance is unequal to the specified object.",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_TOSTRING": "Gets the string corresponding to the current Exception instance.",
    "GLOBAL_DTY_EXCEPT_EXCEPTION_WHAT": "Gets a string equivalent to the exception information.",
    "GLOBAL_DTY_FLOAT_COMPARETO": "Compares the size of the current instance with the specified Float object.",
    "GLOBAL_DTY_FLOAT_CONSTRUCTOR_1": "Creates a float object with the specified float value and float reliable precision.",
    "GLOBAL_DTY_FLOAT_CONSTRUCTOR_2": "Creates a float object from the specified float value.",
    "GLOBAL_DTY_FLOAT_CONSTRUCTOR_3": "Creates a new Float object from the specified Float object instance.",
    "GLOBAL_DTY_FLOAT_EPSILON": "Represents the smallest positive Float value greater than zero. This field is a constant.",
    "GLOBAL_DTY_FLOAT_EQUALS_1": "Gets a Boolean value indicating whether the specified TianyuObject instance is equal to the current object.",
    "GLOBAL_DTY_FLOAT_EQUALS_2": "Gets a Boolean value indicating whether the specified Instance of a Float type is equal to the current object.",
    "GLOBAL_DTY_FLOAT_FLOAT": "Implicitly converts the current Float instance to the equivalent Float value type.",
    "GLOBAL_DTY_FLOAT_GETHASHCODE": "Gets a 64-bit unsigned integer equal to the memory hash value of the current instance.",
    "GLOBAL_DTY_FLOAT_GETTYPEID": "Gets a 64-bit unsigned integer equal to the type identifier of the current instance (the value of the identifier may vary from system platform to compiler).",
    "GLOBAL_DTY_FLOAT_MAXVALUE": "Represents the maximum possible value of Float. This field is a constant.",
    "GLOBAL_DTY_FLOAT_MINVALUE": "Represents the smallest possible value for Float. This field is a constant.",
    "GLOBAL_DTY_FLOAT_OPERATOR_ADD": "Adds the current instance to the specified Float object and returns the result as a Float value.",
    "GLOBAL_DTY_FLOAT_OPERATOR_ADD_ASS": "Adds the current instance to the specified Float object and sets the value of the current instance to the result of the addition and returns the result as a Float value.",
    "GLOBAL_DTY_FLOAT_OPERATOR_ASS": "Assigns the value of the specified Float object to the current instance and returns the value as a Float value type.",
    "GLOBAL_DTY_FLOAT_OPERATOR_DIV": "Divides the current instance from the specified Float object and returns the result as a Float value.",
    "GLOBAL_DTY_FLOAT_OPERATOR_DIV_ASS": "Divides the current instance from the specified Float object and sets the value of the current instance to the result of the division, and returns the result as a Float value.",
    "GLOBAL_DTY_FLOAT_OPERATOR_EQ_1": "Gets a Boolean value indicating whether the specified TianyuObject is equal to the current instance.",
    "GLOBAL_DTY_FLOAT_OPERATOR_EQ_2": "Gets a Boolean value indicating whether the specified object is equal to the current instance.",
    "GLOBAL_DTY_FLOAT_OPERATOR_GE": "Gets a Boolean value indicating whether the specified current instance is greater than or equal to the current object.",
    "GLOBAL_DTY_FLOAT_OPERATOR_GT": "Gets a Boolean value indicating whether the specified current instance is larger than the current object.",
    "GLOBAL_DTY_FLOAT_OPERATOR_LE": "Gets a Boolean value indicating whether the current instance is less than or equal to the specified object.",
    "GLOBAL_DTY_FLOAT_OPERATOR_LT": "Gets a Boolean value indicating whether the current instance is smaller than the specified object.",
    "GLOBAL_DTY_FLOAT_OPERATOR_MUL": "Multiplies the current instance with the specified Float object and returns the result as a Float value type.",
    "GLOBAL_DTY_FLOAT_OPERATOR_MUL_ASS": "Multiplies the current instance with the specified Float object and sets the value of the current instance to the result of the multiplication and returns the result as a Float value.",
    "GLOBAL_DTY_FLOAT_OPERATOR_NE": "Compares whether the current instance is unequal to the specified object.",
    "GLOBAL_DTY_FLOAT_OPERATOR_SD_1": "Subtract 1.0 from the value of the current instance and return the result as a float value. (This operation updates data for the current instance.)",
    "GLOBAL_DTY_FLOAT_OPERATOR_SD_2": "Subtract 1.0 from the current instance value and update the current instance value, returning the original value as a float value.",
    "GLOBAL_DTY_FLOAT_OPERATOR_SI_1": "Increment the value of the current instance by 1.0 and return the result as a float value. (This operation updates data for the current instance.)",
    "GLOBAL_DTY_FLOAT_OPERATOR_SI_2": "Increment the value of the current instance by 1.0 and update the value of the current instance, returning the original value as a float value.",
    "GLOBAL_DTY_FLOAT_OPERATOR_SUB": "Subtracts the value of the current instance from the specified Float object and returns the result as a Float value type.",
    "GLOBAL_DTY_FLOAT_OPERATOR_SUB_ASS": "Subtracts the value of the current instance from the specified Float object and sets the value of the current instance to the subtraction result, returning the result as a Float value.",
    "GLOBAL_DTY_FLOAT_PARSE": "Converts the specified string to an equivalent float value.",
    "GLOBAL_DTY_FLOAT_PRECISION": "Represents the reliable precision of the current Float object.",
    "GLOBAL_DTY_FLOAT_TOSTRING_1": "Gets a string of the specified format equivalent to the current instance.",
    "GLOBAL_DTY_FLOAT_TOSTRING_2": "Get a string equivalent to the current instance.",
    "GLOBAL_DTY_FLOAT_TRYPARSE_1": "Attempts to convert the specified string to the equivalent float value type.",
    "GLOBAL_DTY_FLOAT_TRYPARSE_2": "Attempts to convert the specified string to an equivalent object of type Float.",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_1": "Converts the specified character type value to an equivalent formatted string.",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_10": "Converts the specified double - precision floating-point value to an equivalent formatted string.",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_11": "Converts the specified Boolean value to an equivalent formatted string.",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_12": "Gets a string from the specified IToString object.",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_13": "Gets the string equivalent to the specified type.",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_2": "Converts the specified unsigned character type value to an equivalent formatted string.",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_3": "Converts the specified 16-bit short integer value to an equivalent formatted string.",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_4": "Converts the specified 16-bit unsigned short integer type value to an equivalent formatted string.",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_5": "Converts the specified 32-bit integer value to an equivalent formatted string.",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_6": "Converts the specified 32-bit unsigned integer type value to an equivalent formatted string.",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_7": "Converts the specified 64-bit long integer value to an equivalent formatted string.",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_8": "Converts the specified 64-bit unsigned long integer value to an equivalent formatted string.",
    "GLOBAL_DTY_FORMATHELPER_FORMAT_9": "Converts the specified single-precision real value to an equivalent formatted string.",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AF_ZA ": "Afrikaans (South Africa)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AM_AM": "Amharic (Amhara)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_AE": "Arabic (United Arab Emirates)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_BH": "Arabic (Bahrain)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_DZ": "Arabic (Algeria)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_EG": "Arabic (Egypt)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_IQ": "Arabic (Iraq)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_JO": "Arabic (Jordan)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_KW": "Arabic (Kuwait)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_LB": "Arabic (Lebanon)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_LY": "Arabic (Libya)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_MA": "Arabic (Morocco)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_OM": "Arabic (Oman)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_QA": "Arabic (Qatar)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_SA": "Arabic (Saudi Arabia)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_SY": "Arabic (Syria)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_TN": "Arabic (Tunisia)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AR_YE": "Arabic (Yemen)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AS_AS": "Assamese (Assamese)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AZ_AZ_CYRL": "Azeri (Cyrillic)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_AZ_AZ_LATN": "Azeri (Latin)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_BE_BY": "Belarusian (Belarus)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_BG_BG": "Bulgarian (Bulgaria)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_CA_ES": "Catalan (Catala)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_CD_CZ": "Czech (Czech)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_DA_DK": "Danish (Denmark)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_DE_AT": "German (Austria)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_DE_CH": "German (Switzerland)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_DE_DE": "German (Germany)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_DE_LI": "German (Liechtenstein)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_DE_LU": "German (Luxembourg)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_AU": "English (Australia)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_BZ": "English (Belize)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_CA": "English (Canada)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_CB": "English (Caribbean)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_IE": "English (Ireland)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_IN": "English (India)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_JM": "English (Jamaica)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_NZ": "English (New Zealand)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_PH": "English (Phillippines)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_TT": "English (Trinidad)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_UK": "English (United Kingdom)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_US": "English (United States)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_ZA": "English (Southern Africa)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EN_ZW": "English (Zimbabwe)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_AR": "Spanish (Argentina)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_BO": "Spanish (Bolivia)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_CL": "Spanish (Chile)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_CO": "Spanish (Colombia)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_CR": "Spanish (Costa Rica)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_DO": "Spanish (Dominican Republic)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_EC": "Spanish (Ecuador)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_ES": "Spanish (Spain Traditional)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_GT": "Spanish (Guatemala)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_HN": "Spanish (Honduras)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_MX": "Spanish (Mexico)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_NI": "Spanish (Nicaragua)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_PA": "Spanish (Panama)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_PE": "Spanish (Peru)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_PR": "Spanish (Puerto Rico)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_PY": "Spanish (Paraguay)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_SV": "Spanish (Salvador)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_UY": "Spanish (Uruguay)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ES_VE": "Spanish (Venezuela)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ET_EE": "Estonian (Estonia)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_EU_ES": "Basque (Basque)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_FI_FI": "Finnish (Finland)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_FO_FO": "Faroese (Faeroes)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_FR_BE": "French (Belgium)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_FR_CA": "French (Canada)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_FR_CH": "French (Switzerland)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_FR_FR": "French (France)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_FR_LU": "French (Luxembourg)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_FR_MC": "French (Monaco)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_GL_ES": "Galician (Galicia)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_GU_IN": "Gujarati (India)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_HE_IL": "Hebrew (Israel)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_HI_IN": "North Indian (India)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_HR_HR": "Croatian (Croatia)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_HU_HU": "Hungarian (Hungary)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_HY_AM": "Armenian (Armenian)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ID_ID": "Indonesian (Indonesia)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_IS_IS": "Icelandic (Iceland)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_IT_CH": "Italian (Switzerland)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_IT_IT": "Italian (Italy)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_JA_JP": "Japanese (Japan)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_KK_KZ": "Kazakh (Kazakhstan)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_KN_IN": "Kannada (India)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_KO_KR": "Korean (Korea)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_KY_KZ": "Kyrgyz (Kazakhstan)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_LT_LT": "Lithuanian (Lithuania)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_LV_LV": "Latvian (Latvian)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_MN_MN": "Mongolian (Mongolia)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_MR_IN": "Marathi (India)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_MS_BN": "Malay (Brunei)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_MS_MY": "Malay (Malaysia)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_NB_NO": "Norwegian (Bokml)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_NL_BE": "Netherlands (Belgium)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_NL_NL": "Netherlands (Netherlands)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_NN_NO": "Norwegian (Nynorsk)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_PA_IN": "Punjab (India)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_PL_PL": "Polish (Polish)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_PT_BR": "Portuguese (Brazil)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_PT_PT": "Portuguese (Portugal)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_RO_MO": "Romanian (Moldova)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_RO_RO": "Romanian (Romania)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_RU_MO": "Russian (Moldova)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_RU_RU": "Sanskrit (India)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SA_IN": "Sanskrit (India)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SK_SK": "Slovak (Slovak)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SL_SI": "Slovenia (Slovenia)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SQ_AL": "Albanian (Albania)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SR_SP_CYRL": "Serbia (Serre - Cyrillic)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SR_SP_LATN": "Serbia (Serre - Latin)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SV_FI": "Swedish (Finland)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SV_SE": "Swedish (Sweden)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_SW_KE": "Swahili (Kenya)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_TA_IN": "Tamil (India)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_TE_IN": "Telugu (India)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_TH_TH": "Thai (Thailand)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_TR_TR": "Turkish (Turkey)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_TT_RU": "Tatar (Russia)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_UZ_UZ_CYRL": "Uzbek (Uzbekistan - Cyrillics)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_UZ_UZ_LATN": "Uzbek (Uzbekistan - Latin)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_VI_VN": "Vietnamese (Vietnam)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ZH_CN": "Chinese (Simplified)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ZH_HK": "Chinese (HongKong)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ZH_MO": "Chinese (Macau SAR)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ZH_SG": "Chinese (Singapore)",
    "GLOBAL_DTY_I18N_LANGUAGEAREA_ZH_TW": "Chinese (Taiwan)",
    "GLOBAL_DTY_IFORMATTER_TOSTRING": "Gets the string corresponding to the current IFormatter instance.",
    "GLOBAL_DTY_IOBJECTCONVERTER_TRYCONVERT_1": "Attempts to update the current instance from the specified byte array.",
    "GLOBAL_DTY_IOBJECTCONVERTER_TRYCONVERT_2": "Attempts to deserialize and update the current instance starting at the specified location of the specified byte array.",
    "GLOBAL_DTY_IPROPERTYGETTER_GET": "Property getter.",
    "GLOBAL_DTY_IPROPERTYGETTER_T": "Property getter that implicitly converts the current object to the specified type.",
    "GLOBAL_DTY_IPROPERTYSETTER_OPERATOR_ASS_1": "Updates the current object from the specified type object.",
    "GLOBAL_DTY_IPROPERTYSETTER_OPERATOR_ASS_2": "Initializes the current object from the specified property getter.",
    "GLOBAL_DTY_IPROPERTYSETTER_SET": "Property setter.",
    "GLOBAL_DTY_ISTRINGCONVERTER_TRYCONVERT_1": "Attempts to convert the specified byte array to a string corresponding to the current instance.",
    "GLOBAL_DTY_ISTRINGCONVERTER_TRYCONVERT_2": "Attempts to convert the byte array to the string corresponding to the current object, starting with the specified index of the specified byte array.",
    "GLOBAL_DTY_ITOSTRING_TOSTRING": "Gets a string equivalent to the current implementation of the IToString interface.",
    "GLOBAL_DTY_KEYVALUEPAIR_CONSTRUCTOR_1": "Creates an instance of a key-value pair with the specified key and value.",
    "GLOBAL_DTY_KEYVALUEPAIR_CONSTRUCTOR_2": "Creates a new keyvalue pair instance from the specified keyvalue pair instance.",
    "GLOBAL_DTY_KEYVALUEPAIR_GETHASHCODE": "Gets a 64-bit unsigned integer equal to the memory hash value of the current instance.",
    "GLOBAL_DTY_KEYVALUEPAIR_GETTYPEID": "Gets a 64-bit unsigned integer equal to the type identifier of the current instance (the value of the identifier may vary from system platform to compiler).",
    "GLOBAL_DTY_KEYVALUEPAIR_KEY": "Represents the key in the current key-value pair instance.",
    "GLOBAL_DTY_KEYVALUEPAIR_TOSTRING": "Gets the string corresponding to the current KeyValuePair instance.",
    "GLOBAL_DTY_KEYVALUEPAIR_VALUE": "Represents the value in the current key-value pair instance.",
    "GLOBAL_DTY_LPROPERTY_CONSTRUCTOR_1": "Creates an instance of a nonvalued class attribute from a lambda expression of the specified getter and setter.",
    "GLOBAL_DTY_LPROPERTY_CONSTRUCTOR_2": "Creates a new instance from the specified non-value class attribute instance.",
    "GLOBAL_DTY_LPROPERTY_GET": "Property Getter.",
    "GLOBAL_DTY_LPROPERTY_GETHASHCODE": "Gets a 64-bit unsigned integer equal to the memory hash value of the current instance.",
    "GLOBAL_DTY_LPROPERTY_GETTYPEID": "Gets a 64-bit unsigned integer equal to the type identifier of the current instance (the value of the identifier may vary from system platform to compiler).",
    "GLOBAL_DTY_LPROPERTY_OPERATOR_ASS_1": "Updates the current property instance with the specified type object value.",
    "GLOBAL_DTY_LPROPERTY_OPERATOR_ASS_2": "Updates the current property instance with the specified property getter.",
    "GLOBAL_DTY_LPROPERTY_SET": "Property setter.",
    "GLOBAL_DTY_LPROPERTY_T": "Implicitly converts the current property object to the specified type.",
    "GLOBAL_DTY_LPROPERTY_TOSTRING": "Gets the string corresponding to the current LProperty instance.",
    "GLOBAL_DTY_PARSEHELPER_PARSE_1": "Converts the specified string to a character type.",
    "GLOBAL_DTY_PARSEHELPER_PARSE_10": "Converts the specified string to a double - precision real type.",
    "GLOBAL_DTY_PARSEHELPER_PARSE_11": "Converts the specified string to a Boolean type.",
    "GLOBAL_DTY_PARSEHELPER_PARSE_12": "Converts the specified string to the specified data type. (Public Data Parsing Assistant does not currently provide this method.)",
    "GLOBAL_DTY_PARSEHELPER_PARSE_2": "Converts the specified string to an unsigned character type.",
    "GLOBAL_DTY_PARSEHELPER_PARSE_3": "Converts the specified string to a 16-bit short integer type.",
    "GLOBAL_DTY_PARSEHELPER_PARSE_4": "Converts the specified string to a 16-bit unsigned short integer type.",
    "GLOBAL_DTY_PARSEHELPER_PARSE_5": "Converts the specified string to a 32-bit integer type.",
    "GLOBAL_DTY_PARSEHELPER_PARSE_6": "Converts the specified string to a 32-bit unsigned integer type.",
    "GLOBAL_DTY_PARSEHELPER_PARSE_7": "Converts the specified string to a 64-bit long integer type.",
    "GLOBAL_DTY_PARSEHELPER_PARSE_8": "Converts the specified string to a 64-bit unsigned long integer type.",
    "GLOBAL_DTY_PARSEHELPER_PARSE_9": "Converts the specified string to a single-precision real type.",
    "GLOBAL_DTY_PLATFORMID_MACOSX ": "Indicates that the current system platform is MacOS.",
    "GLOBAL_DTY_PLATFORMID_OTHER": "Indicates that the current system platform is unknown.",
    "GLOBAL_DTY_PLATFORMID_UNIX": "Indicates the Unix series of the current system platform bit.",
    "GLOBAL_DTY_PLATFORMID_WINDOWS": "Indicates that the current system platform is Windows.",
    "GLOBAL_DTY_PROPERTY_CONSTRUCTOR": "Provides the initial value from the specified value and creates an instance of the value type attribute.",
    "GLOBAL_DTY_PROPERTY_GET": "Property getter.",
    "GLOBAL_DTY_PROPERTY_GETHASHCODE": "Gets a 64-bit unsigned integer equal to the memory hash value of the current instance.",
    "GLOBAL_DTY_PROPERTY_GETTYPEID": "Gets a 64-bit unsigned integer equal to the type identifier of the current instance (the value of the identifier may vary from system platform to compiler).",
    "GLOBAL_DTY_PROPERTY_OPERATOR_ASS_1": "Updates the current property instance with the specified type object value.",
    "GLOBAL_DTY_PROPERTY_OPERATOR_ASS_2": "Updates the current property instance with the specified property getter.",
    "GLOBAL_DTY_PROPERTY_SET": "Property setter.",
    "GLOBAL_DTY_PROPERTY_T": "Converts the current object implicitly to the specified type.",
    "GLOBAL_DTY_PROPERTY_TOSTRING": "Gets the string corresponding to the current Property instance.",
    "GLOBAL_DTY_SMARTPOINTER_CONSTRUCTOR_1": "Creates a smart pointer object from the specified pointer.",
    "GLOBAL_DTY_SMARTPOINTER_CONSTRUCTOR_2": "Creates a smart pointer object from the specified pointer, and sets the effective memory size of the pointer.",
    "GLOBAL_DTY_SMARTPOINTER_CONSTRUCTOR_3": "Creates a smart pointer object from the specified pointer and manually sets whether it is a pointer weak reference.",
    "GLOBAL_DTY_SMARTPOINTER_CONSTRUCTOR_4": "Creates a smart pointer object from the specified pointer, setting the effective length of the pointer and the weak reference of the pointer.",
    "GLOBAL_DTY_SMARTPOINTER_CONSTRUCTOR_5": "Creates a new smart pointer object from the specified smart pointer object. (This effect may vary depending on the macro definition. By default, the copied pointer will be set to null and the ownership will be moved to the new pointer.)",
    "GLOBAL_DTY_SMARTPOINTER_COPY": "Releases the current pointer and updates the current pointer from the specified smart pointer. (This operation is not safe. Make sure that the copied source pointer is weak; otherwise, multiple release may occur.)",
    "GLOBAL_DTY_SMARTPOINTER_GETHASHCODE": "Gets a 64-bit unsigned integer equal to the memory hash value of the current instance.",
    "GLOBAL_DTY_SMARTPOINTER_GETTYPEID": "Gets a 64-bit unsigned integer equal to the type identifier of the current instance (the value of the identifier may vary from system platform to compiler).",
    "GLOBAL_DTY_SMARTPOINTER_GETWEAK": "Creates a new weak reference pointer from the current smart pointer.",
    "GLOBAL_DTY_SMARTPOINTER_ISNULL": "Gets a Boolean value indicating whether the current smart pointer is null.",
    "GLOBAL_DTY_SMARTPOINTER_MOVE": "Updates the current pointer from the specified smart pointer after releasing the current pointer and sets the specified pointer to null.",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_ARROW_1": "Retrieves the specified member from a pointer to the current instance.",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_ARROW_2": "Extracts the specified member from a pointer to the current instance and converts the extracted member to a const element.",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_EQ_1": "Gets a Boolean value indicating whether the specified smart pointer object is equal to the current instance.",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_EQ_2": "Gets a Boolean value indicating whether an object of the specified type is equal to the current instance.",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_INDEX_1": "Gets the element of the corresponding index value in the current pointer.",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_INDEX_2": "Gets the element of the index value in the current pointer and converts the element to const.",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_NE_1": "Gets a Boolean value indicating whether the specified smart pointer object is not equal to the current instance.",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_NE_2": "Gets a Boolean value indicating whether an object of the specified type is not equal to the current instance.",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_PTR": "Gets the first element reference of the current pointer.",
    "GLOBAL_DTY_SMARTPOINTER_OPERATOR_REF_1": "Gets an unsigned integer 64 representing the address of the current pointer.",
    "GLOBAL_DTY_SMARTPOINTER_SIZE": "Represents the format of the element currently contained in the pointer.",
    "GLOBAL_DTY_SMARTPOINTER_T": "Converts the current smart pointer implicitly to a pointer of the specified type.",
    "GLOBAL_DTY_SMARTPOINTER_TOSTRING": "Gets the string corresponding to the current SmartPointer instance.",
    "GLOBAL_DTY_SMARTPOINTER__POINTER": "The actual element pointer that represents the current smart pointer.",
    "GLOBAL_DTY_SMARTPOINTER__SIZE": "Represents the number of elements property of the current smart pointer.",
    "GLOBAL_DTY_TEST_TESTENTITY_CANCELASSERT": "Unblock test mode for the test component instance and switch to non-blocking test mode.",
    "GLOBAL_DTY_TEST_TESTENTITY_CONSTRUCTOR_1": "Initializes the test instance object with the specified test instance name and passed parameters.(Use type ::string)",
    "GLOBAL_DTY_TEST_TESTENTITY_CONSTRUCTOR_2": "Initializes the test instance object with the specified test instance name and passed parameters. (Use type char*)",
    "GLOBAL_DTY_TEST_TESTENTITY_CONSTRUCTOR_3": "Initializes a new test instance object from an existing test instance.",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNEXCEPTIONTEST_1": "Execute a test item that expects an exception. (Use ::string)",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNEXCEPTIONTEST_2": "Execute a test item that expects an exception. (Use type char*)",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNEXCEPTIONTEST_3": "Executes a test that probes the specified exception. (Use ::string)",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNEXCEPTIONTEST_4": "Executes a test that probes the specified exception. (Use char*)",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNFLOW_1": "Execute a stream test item. (Use type char*)",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNFLOW_2": "Execute a stream test item. (Use ::string)",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNTEST_1": "Execute a regular test item. (Use type char*)",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNTEST_2": "Executes a regular test item that can be set to ignore exceptions. (Use type char*)",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNTEST_3": "Execute a regular test item. (Use ::string)",
    "GLOBAL_DTY_TEST_TESTENTITY_RUNTEST_4": "Executes a regular test item that can be set to ignore exceptions. (Use ::string)",
    "GLOBAL_DTY_TEST_TESTENTITY_SETASSERT": "Sets the current test instance to blocking test mode, in which all tests after a failed test item are skipped.",
    "GLOBAL_DTY_TEST_TESTENTITY_STARTSPEC_1": "Start a new test instance. (Use ::string)",
    "GLOBAL_DTY_TEST_TESTENTITY_STARTSPEC_2": "To start a new test instance, you can set whether exceptions are ignored. (Use ::string)",
    "GLOBAL_DTY_TEST_TESTENTITY_STARTSPEC_3": "To start a new test instance, you can set whether exceptions are ignored and whether the status depends on the strength of the prior test (effective for blocking test mode). (Use ::string)",
    "GLOBAL_DTY_TEST_TESTENTITY_STARTSPEC_4": "Start a new test instance. (Use type char*)",
    "GLOBAL_DTY_TEST_TESTENTITY_STARTSPEC_5": "To start a new test instance, you can set whether exceptions are ignored. (Use type char*)",
    "GLOBAL_DTY_TEST_TESTENTITY_STARTSPEC_6": "To start a new test instance, you can set whether exceptions are ignored and whether the status depends on the strength of the prior test (effective for blocking test mode). (Use type char*)",
    "GLOBAL_DTY_TEST_TESTFLOW_CONSTRUCTOR_1": "Initializes a streaming test instance from the specified streaming test name, test instance object, test output file, test hierarchy, and console identity.",
    "GLOBAL_DTY_TEST_TESTFLOW_CONSTRUCTOR_2": "Initializes a new streaming test instance from the specified streaming test object.",
    "GLOBAL_DTY_TEST_TESTFLOW_ITEMEXCEPTION_1": "Execute streaming test items that expect exceptions. (Use ::string)",
    "GLOBAL_DTY_TEST_TESTFLOW_ITEMEXCEPTION_2": "Execute streaming test items that expect exceptions. (Use type char*)",
    "GLOBAL_DTY_TEST_TESTFLOW_ITEMEXCEPTION_3": "Execute a stream test item that expects to specify an exception. (Use type char*)",
    "GLOBAL_DTY_TEST_TESTFLOW_ITEMEXCEPTION_4": "Execute a stream test item that expects to specify an exception. (Use ::string)",
    "GLOBAL_DTY_TEST_TESTFLOW_ITEM_1": "Execute a regular stream test item. (Use ::string)",
    "GLOBAL_DTY_TEST_TESTFLOW_ITEM_2": "Execute a regular stream test item. (Use type char*)",
    "GLOBAL_DTY_TEST_TESTFLOW_SET": "Force the current streaming test to fail.",
    "GLOBAL_DTY_TEST_TESTFLOW_SKIP": "Force the current streaming test to be skipped.",
    "GLOBAL_DTY_TEST_TESTOBJECT_EQ_1": "Checks whether two strings specified are equal.",
    "GLOBAL_DTY_TEST_TESTOBJECT_EQ_2": "Checks whether two tianyuObjects are equal.",
    "GLOBAL_DTY_TEST_TESTOBJECT_EQ_3": "Determines whether two objects of the specified template type are equal.",
    "GLOBAL_DTY_TEST_TESTOBJECT_GETSTATE": "Gets the test results of the current test object.",
    "GLOBAL_DTY_TEST_TESTOBJECT_GT_1": "Determines whether the specified first string is larger than the second string.",
    "GLOBAL_DTY_TEST_TESTOBJECT_GT_2": "Determines whether the first TianyuObject specified is larger than the second.",
    "GLOBAL_DTY_TEST_TESTOBJECT_GT_3": "Determines whether the first object of the specified template type is larger than the second object.",
    "GLOBAL_DTY_TEST_TESTOBJECT_ISEMPTY": "Determines whether the specified string is empty.",
    "GLOBAL_DTY_TEST_TESTOBJECT_ISNOTEMPTY": "Determines whether the specified string is not an empty string.",
    "GLOBAL_DTY_TEST_TESTOBJECT_ISNOTNULL_1": "Determines whether the specified object is not an empty object.",
    "GLOBAL_DTY_TEST_TESTOBJECT_ISNOTNULL_2": "Determines whether the specified TianyuObject is not empty.",
    "GLOBAL_DTY_TEST_TESTOBJECT_ISNULL_1": "Determines whether the specified object is an empty object.",
    "GLOBAL_DTY_TEST_TESTOBJECT_ISNULL_2": "Checks whether the specified TianyuObject is empty.",
    "GLOBAL_DTY_TEST_TESTOBJECT_LT_1": "Determines whether the specified first string is smaller than the second string.",
    "GLOBAL_DTY_TEST_TESTOBJECT_LT_2": "Determines whether the specified first TianyuObject is smaller than the second.",
    "GLOBAL_DTY_TEST_TESTOBJECT_LT_3": "Determines whether the first object of the specified template type is smaller than the second object.",
    "GLOBAL_DTY_TEST_TESTOBJECT_NE_1": "Determines whether the specified two strings are not equal.",
    "GLOBAL_DTY_TEST_TESTOBJECT_NE_2": "Determines whether the two specified TianyuObjects are not equal.",
    "GLOBAL_DTY_TEST_TESTOBJECT_NE_3": "Determines whether two specified template type objects are not equal.",
    "GLOBAL_DTY_TEST_TESTOBJECT_SET": "Forces the test result of the current test object to fail.",
    "GLOBAL_DTY_TEST_TESTOBJECT_SKIP": "Forces the test result of the current test object to be skipped.",
    "GLOBAL_DTY_TEST_TESTOBJECT_STRLENGT": "Checks whether the length of the specified string is greater than the specified length.",
    "GLOBAL_DTY_TEST_TESTOBJECT_STRLENIS": "Checks whether the specified string length equals the specified length.",
    "GLOBAL_DTY_TEST_TESTOBJECT_STRLENISNOT": "Checks whether the specified string length is different from the specified length.",
    "GLOBAL_DTY_TEST_TESTOBJECT_STRLENLT": "Checks whether the specified string length is less than the specified length.",
    "GLOBAL_DTY_TEST_TESTOBJECT_TOBEFALSE": "Checks whether the specified Boolean value is false.",
    "GLOBAL_DTY_TEST_TESTOBJECT_TOBETRUE": "Checks whether the specified Boolean value is true.",
    "GLOBAL_DTY_TEST_TESTOBJECT_UNSET": "Forcibly sets the test result of the test object to success.",
    "GLOBAL_DTY_TEST_TESTSTATE_FAILED": "Indicates that the test status is failed.",
    "GLOBAL_DTY_TEST_TESTSTATE_SKIPPED": "to be skipped over.",
    "GLOBAL_DTY_TEST_TESTSTATE_SUCCESS": "Indicates that the test status is successful.",
    "GLOBAL_DTY_TEST_TESTTYPE_ASSERT": "Indicates that the test is in blocking mode; If there is a failed test, all tests after that test are skipped.",
    "GLOBAL_DTY_TEST_TESTTYPE_EXPECT": "Indicates that the test is in non-blocking mode; The failure of a test item has no impact on subsequent tests.",
    "GLOBAL_DTY_TEST_TESTTYPE_SKIPPED": "to be skipped over or tested.",
    "GLOBAL_DTY_TIANYUOBJECT_EQUALS": "Gets a Boolean value indicating whether the specified TianyuObject is equal to the current instance.",
    "GLOBAL_DTY_TIANYUOBJECT_GETHASHCODE": "Gets a 64-bit unsigned integer equal to the memory hash value of the current instance.",
    "GLOBAL_DTY_TIANYUOBJECT_GETTYPEID": "Gets a 64-bit unsigned integer equal to the type identifier of the current instance (the value of the identifier may vary from system platform to compiler).",
    "GLOBAL_DTY_TIANYUOBJECT_ISNULL": "Gets a Boolean value indicating whether the current instance is null. (By default, any instance should return true)",
    "GLOBAL_DTY_TIANYUOBJECT_ISNULLS_STATIC": "Gets a Boolean value indicating whether the specified object is null.",
    "GLOBAL_DTY_TIANYUOBJECT_OPERATOR_EQ": "Compares whether the current instance is equal to the specified object.",
    "GLOBAL_DTY_TIANYUOBJECT_TOSTRING": "Gets the string corresponding to the current TianyuObject instance.",
    "GLOBAL_DTY_TINTEGERBASE_COMPARETO": "Compares the size of the current instance with the specified TIntegerBase object.",
    "GLOBAL_DTY_TINTEGERBASE_CONSTRUCTOR_1": "Creates an integer type object from the specified integer type value.",
    "GLOBAL_DTY_TINTEGERBASE_CONSTRUCTOR_2": "Initializes an instance of integer type from the specified integer type object.",
    "GLOBAL_DTY_TINTEGERBASE_EQUALS_1": "Gets a Boolean value indicating whether the specified TianyuObject instance is equal to the current object.",
    "GLOBAL_DTY_TINTEGERBASE_EQUALS_2": "Gets a Boolean value indicating whether the specified Instance of a TIntegerBase type is equal to the current object.",
    "GLOBAL_DTY_TINTEGERBASE_GETHASHCODE": "Gets a 64-bit unsigned integer equal to the memory hash value of the current instance.",
    "GLOBAL_DTY_TINTEGERBASE_GETTYPEID": "Gets a 64-bit unsigned integer equal to the type identifier of the current instance (the value of the identifier may vary from system platform to compiler).",
    "GLOBAL_DTY_TINTEGERBASE_MAXVALUE": "Represents the maximum possible value for the current integer type. This field is a constant.",
    "GLOBAL_DTY_TINTEGERBASE_MINVALUE": "Represents the smallest possible value for the current integer type. This field is a constant.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_AAND": "Bitwise matches the current instance with an object of the specified integer type and returns the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_ADD": "Adds the current instance to an object of the specified integer type and returns the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_ADD_ASS": "Adds the current instance to an object of the specified integer type and sets the value of the current instance to the result of the addition and returns the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_ANOT": "Bitwise inverts the current instance object and returns the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_AOR": "Returns the current instance bit or with an object of the specified integer type and the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_AOR_ASS": "Sets the value of the current instance to the computed value of an object of the specified integer type by bit or and returns the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_ASS": "Assigns the value of an object of the specified integer type to the current instance and returns the value as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_AXOR": "Bitwise xor the current instance with an object of the specified integer type and returns the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_AXOR_ASS": "Bit-xor of the current instance and an object of the specified integer type and sets the value of the current instance to the computed result and returns the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_DIV": "Divides the current instance with an object of the specified integer type and returns the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_DIV_ASS": "Divides the current instance from an object of the specified integer type and sets the value of the current instance to the div, returning the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_EQ_1": "Gets a Boolean value indicating whether the specified TianyuObject is equal to the current instance.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_EQ_2": "Gets a Boolean value indicating whether the specified object is equal to the current instance.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_GE": "Gets a Boolean value indicating whether the specified current instance is greater than or equal to the current object.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_GT": "Gets a Boolean value indicating whether the specified current instance is larger than the current object.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_LAND_ASS": "Performs a logical sum operation on the current instance and an object of the specified integer type and sets the value of the current instance to the result of addition, and returns the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_LE": "Gets a Boolean value indicating whether the current instance is less than or equal to the specified object.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_LMOVE": "Moves the current instance to the left by the specified number of digits and returns the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_LMOVE_ASS": "Moves the current instance to the left by the specified number of digits and updates the current object, returning the new object value as the corresponding integer type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_LNOT": "Gets a specified value type indicating the logical non-result of the current object instance.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_LT": "Gets a Boolean value indicating whether the current instance is smaller than the specified object.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_MOD": "Complements the current instance with an object of the specified integer type and returns the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_MOD_ASS": "Complements the current instance with an object of the specified integer type and sets the value of the current instance to the sum, returning the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_MUL": "Multiplies the current instance with an object of the specified integer type and returns the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_MUL_ASS": "Multiplies the current instance with an object of the specified integer type and sets the value of the current instance to the result of the addition and returns the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_NE": "Compares whether the current instance is unequal to the specified object.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_RMOVE": "Moves the current instance right by the specified number of digits and returns the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_RMOVE_ASS": "Moves the current instance to the right by the specified number of digits and updates the current object, returning the new object value as the corresponding integer type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_SD_1": "Subtract 1 from the value of the current instance and return the result as the corresponding integer value type. (This operation updates data for the current instance.)",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_SD_2": "Subtract 1 from the value of the current instance and update the value of the current instance, returning the original value as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_SI_1": "Increments the value of the current instance by 1 and returns the result as the corresponding integer value type. (This operation updates data for the current instance.)",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_SI_2": "Increments the value of the current instance by 1 and updates the value of the current instance, returning the original value as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_SUB": "Subtracts the value of the current instance from the specified integer type object and returns the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_OPERATOR_SUB_ASS": "Subtract the value of the current instance from an object of the specified integer type and set the value of the current instance to the sum and return the result as the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_PARSE": "Converts the specified string to an equivalent value of the corresponding integer type.",
    "GLOBAL_DTY_TINTEGERBASE_TB": "Implicitly converts the current integer type object to the corresponding integer value type.",
    "GLOBAL_DTY_TINTEGERBASE_TOSTRING_1": "Gets a string of the specified format equivalent to the current instance.",
    "GLOBAL_DTY_TINTEGERBASE_TOSTRING_2": "Get a string equivalent to the current instance.",
    "GLOBAL_DTY_TINTEGERBASE_TRYPARSE_1": "Attempts to convert the specified string to the equivalent corresponding integer numeric type.",
    "GLOBAL_DTY_TINTEGERBASE_TRYPARSE_2": "Attempts to convert the specified string to an equivalent object of integer type.",
    "GLOBAL_DTY_TYPE_CONSTRUCTOR_1": "Initializes a new type object from the specified type instance.",
    "GLOBAL_DTY_TYPE_ID": "Gets a 64-bit unsigned integer that indicates the unique identifier of the current type.",
    "GLOBAL_DTY_TYPE_INSTANCEHASHCODE": "Gets a 64-bit unsigned integer indicating the hash value of the current object.",
    "GLOBAL_DTY_TYPE_NAME": "Gets a string indicating the full name of the current type.",
    "GLOBAL__NUMBERSCALE_ASC": "Indicates that the numeric encoding format is ASCII.",
    "GLOBAL__NUMBERSCALE_BIN": "Indicates that the number is carried in base 2 format.",
    "GLOBAL__NUMBERSCALE_DEC": "Indicates that the number is carried in base 10 format.",
    "GLOBAL__NUMBERSCALE_HEX": "Indicates that the number is carried in base 16 format.",
    "GLOBAL__NUMBERSCALE_OCT": "Indicates that the number is carried in base 8 format.",

    "PROJECT_DOCS_ARCH_VIEW_NO_DOCS": "No corresponding document was found for the current module",

    "PROJECT_DOCS_ARCH_SELECTOR_TIANYU_NATIVE_TITLE": "Tianyu Development Library C++ - Architecture",
    "TIANYU_DEV_DOCS_ARCH_TIANYU_NATIVE_HLCOMPONENT": "High-Level Components & Non-Native C++ Libraries",
    "TIANYU_DEV_DOCS_ARCH_TIANYU_NATIVE_TEXT": "High-Level Texts Library",
    "TIANYU_DEV_DOCS_ARCH_TIANYU_NATIVE_SERFS": "Serialization & File System Library",
    "TIANYU_DEV_DOCS_ARCH_TIANYU_NATIVE_MODEL": "Data Models Library",
    "TIANYU_DEV_DOCS_ARCH_TIANYU_NATIVE_IO": "Basic IO Library",
    "TIANYU_DEV_DOCS_ARCH_TIANYU_NATIVE_IOEXT": "IO Extension Library",
    "TIANYU_DEV_DOCS_ARCH_TIANYU_NATIVE_TEXTBASE": "Basic Text Library",
    "TIANYU_DEV_DOCS_ARCH_TIANYU_NATIVE_IOBASE": "IO Core Library",
    "TIANYU_DEV_DOCS_ARCH_TIANYU_NATIVE_PRIME": "C++ Prime Library",
    "TIANYU_DEV_DOCS_ARCH_TIANYU_NATIVE_CORE": "Tianyu Core Library",
    "TIANYU_DEV_DOCS_ARCH_TIANYU_NATIVE_SYSTEMAPI": "System API",

    "PROJECT_DOCS_ARCH_VIEW_TIANYU_NATIVE_HLCOMPONENT": "Tianyu Native - High-Level Components & Non-Native C++ Libraries",
    "PROJECT_DOCS_ARCH_VIEW_TIANYU_NATIVE_TEXT": "Tianyu Native - High-Level Texts Library",
    "PROJECT_DOCS_ARCH_VIEW_TIANYU_NATIVE_SERFS": "Tianyu Native - Serialization & File System Library",
    "PROJECT_DOCS_ARCH_VIEW_TIANYU_NATIVE_IOEXT": "Tianyu Native - IO Extension Library",
    "PROJECT_DOCS_ARCH_VIEW_TIANYU_NATIVE_MODEL": "Tianyu Native - Data Models Library",
    "PROJECT_DOCS_ARCH_VIEW_TIANYU_NATIVE_IO": "Tianyu Native - Basic IO Library",
    "PROJECT_DOCS_ARCH_VIEW_TIANYU_NATIVE_TEXTBASE": "Tianyu Native - Basic Text Library",
    "PROJECT_DOCS_ARCH_VIEW_TIANYU_NATIVE_IOBASE": "Tianyu Native - IO Core Library",
    "PROJECT_DOCS_ARCH_VIEW_TIANYU_NATIVE_PRIME": "Tianyu Native - C++ Prime Library",
    "PROJECT_DOCS_ARCH_VIEW_TIANYU_NATIVE_CORE": "Tianyu Native - Tianyu Core Library",
    "PROJECT_DOCS_ARCH_VIEW_TIANYU_NATIVE_SYSTEMAPI": "Tianyu Native - System API",

    "PROJECT_DOCS_HELP_TIANYU_NATIVE_TITLE": "Tianyu Development Library C++ - Help",
    "TIANYU_NATIVE_HELP_DOCS_START_PAGE": "Summary",
    "TIANYU_NATIVE_HELP_DOCS_INSTALL_AND_USE": "Install & Use",
    "TIANYU_NATIVE_HELP_DOCS_DESCRIPTION": "Exported Libraries",
    "PROJECT_DOCS_HELP_VIEW_TIANYU_NATIVE_STARTPAGE": "Tianyu Native - Summary",
    "PROJECT_DOCS_HELP_VIEW_TIANYU_NATIVE_INSTALLANDUSE": "Tianyu Native - Install & Use",
    "PROJECT_DOCS_HELP_VIEW_TIANYU_NATIVE_DESCRIPTION": "Tianyu Native - Exported Libraries",

    "": ""
}
